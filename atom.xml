<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cf-Blog</title>
  
  <subtitle>静可谓其道</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-27T10:11:51.228Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>虾莫先生de球鞋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据可视化学习（1） ---canvas</title>
    <link href="http://yoursite.com/2019/02/27/%E5%AD%A6%E4%B9%A0canvas/"/>
    <id>http://yoursite.com/2019/02/27/学习canvas/</id>
    <published>2019-02-27T10:11:50.843Z</published>
    <updated>2019-02-27T10:11:51.228Z</updated>
    
    <content type="html"><![CDATA[<p>悠哉游哉，开始学习啦，本文是学习canvas过程中的一些记录<br><a id="more"></a></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.runoob.com/jsref/dom-obj-canvas.html" target="_blank" rel="noopener">菜鸟教程-canvas</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API" target="_blank" rel="noopener">MDN-canvas API</a></p><h3 id="基本图形"><a href="#基本图形" class="headerlink" title="基本图形"></a>基本图形</h3><h4 id="长方形"><a href="#长方形" class="headerlink" title="长方形"></a>长方形</h4><ul><li>fillRect(x, y, width, height) : 绘制一个填充的矩形</li><li>strokeRect(x, y, width, height) : 绘制一个矩形的边框</li><li>clearRect(x, y, width, height) : 清除指定矩形区域，让清除部分完全透明</li></ul><p>x和y是矩形左上角的坐标点，width是矩形宽度，height是矩形高度。</p><p>参考资料 <a href="https://www.w3cplus.com/canvas/drawing-rectangular.html" target="_blank" rel="noopener">大漠-canvas绘制矩形</a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">  <span class="keyword">let</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>).getContext(<span class="string">'2d'</span>)</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.rect(<span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    ctx.fill()</span><br><span class="line">  &#125;</span><br><span class="line">  draw()</span><br></pre></td></tr></table></figure></p><p>以下代码可以实现鼠标拖动绘制矩形，修改绘制函数，可以实现绘制不同的图形<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myCanvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>)</span><br><span class="line"><span class="keyword">let</span> ctx = myCanvas.getContext(<span class="string">'2d'</span>)</span><br><span class="line"></span><br><span class="line">myCanvas.width = <span class="built_in">window</span>.innerWidth</span><br><span class="line">myCanvas.height = <span class="built_in">window</span>.innerHeight</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rect = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> drag = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">myCanvas.addEventListener(<span class="string">'mousedown'</span>, mouseDown, <span class="literal">false</span>)</span><br><span class="line">myCanvas.addEventListener(<span class="string">'mouseup'</span>, mouseUp, <span class="literal">false</span>)</span><br><span class="line">myCanvas.addEventListener(<span class="string">'mousemove'</span>, mouseMove, <span class="literal">false</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseDown</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  rect.startX = e.pageX - <span class="keyword">this</span>.offsetLeft</span><br><span class="line">  rect.startY = e.pageY - <span class="keyword">this</span>.offsetTop</span><br><span class="line">  drag = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseMove</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (drag) &#123;</span><br><span class="line">    rect.w = (e.pageX - <span class="keyword">this</span>.offsetLeft) - rect.startX</span><br><span class="line">    rect.h = (e.pageY - <span class="keyword">this</span>.offsetTop) - rect.startY</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, myCanvas.width, myCanvas.height) <span class="comment">// 清除画布</span></span><br><span class="line">    drawRect(<span class="string">"fill"</span>) <span class="comment">// 绘图</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  drag = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawRect</span>(<span class="params">style</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (style === <span class="string">"fill"</span>) &#123; <span class="comment">// 填充</span></span><br><span class="line">    ctx.fillRect(rect.startX, rect.startY, rect.w, rect.h)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (style === <span class="string">"stroke"</span>) &#123; <span class="comment">// 边框</span></span><br><span class="line">    ctx.strokeRect(rect.startX, rect.startY, rect.w, rect.h)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawScreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ctx.lineWidth = <span class="number">10</span></span><br><span class="line">  ctx.fillStyle = <span class="string">"#f36"</span></span><br><span class="line">  ctx.strokeStyle = <span class="string">'#f36'</span></span><br><span class="line">  ctx.font = <span class="string">"24px Arial"</span></span><br><span class="line">  ctx.fillText(<span class="string">"拖动鼠标就可以绘制矩形"</span>, <span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">&#125;</span><br><span class="line">drawScreen()</span><br></pre></td></tr></table></figure></p><h4 id="圆形、圆弧"><a href="#圆形、圆弧" class="headerlink" title="圆形、圆弧"></a>圆形、圆弧</h4><ul><li>ctx.arc(x, y, radius, starAngle,endAngle, anticlockwise)<br>x : 圆心的 x 坐标<br>y：圆心的 y 坐标<br>radius ： 半径<br>starAngle ：开始角度<br>endAngle：结束角度<br>anticlockwise ：是否逆时针（true）为逆时针，(false)为顺时针</li><li>ctx.arcTo(x1,yx,x2,y2,r)<br>在画布上创建介于两个切线之间的弧：</li></ul><h4 id="绘制路径"><a href="#绘制路径" class="headerlink" title="绘制路径"></a>绘制路径</h4><ul><li>直线 lineTo(x,y)<br>绘制一条从当前位置到指定x以及y位置的直线</li><li>moveTo(x,y)<br>将笔触移动到指定的坐标x以及y上</li></ul><p>canvas初始化或者beginPath()调用后，使用moveTo()函数设置起点<br>绘制笑脸<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath();</span><br><span class="line">ctx.arc(<span class="number">75</span>,<span class="number">75</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>); <span class="comment">// 绘制</span></span><br><span class="line">ctx.moveTo(<span class="number">110</span>,<span class="number">75</span>);</span><br><span class="line">ctx.arc(<span class="number">75</span>,<span class="number">75</span>,<span class="number">35</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI,<span class="literal">false</span>);   <span class="comment">// 口(顺时针)</span></span><br><span class="line">ctx.moveTo(<span class="number">65</span>,<span class="number">65</span>);</span><br><span class="line">ctx.arc(<span class="number">60</span>,<span class="number">65</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>);  <span class="comment">// 左眼</span></span><br><span class="line">ctx.moveTo(<span class="number">95</span>,<span class="number">65</span>);</span><br><span class="line">ctx.arc(<span class="number">90</span>,<span class="number">65</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>);  <span class="comment">// 右眼</span></span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure></p><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><h4 id="颜色、样式、阴影"><a href="#颜色、样式、阴影" class="headerlink" title="颜色、样式、阴影"></a>颜色、样式、阴影</h4><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>fillStyle</td><td>设置或返回用于填充绘画的颜色、渐变或模式  </td></tr><tr><td>strokeStyle</td><td>设置或返回用于笔触的颜色、渐变或模式。  </td></tr><tr><td>shadowColor</td><td>设置或返回用于阴影的颜色。  </td></tr><tr><td>shadowBlur</td><td>设置或返回用于阴影的模糊级别。  </td></tr><tr><td>shadowOffsetX</td><td>设置或返回阴影与形状的水平距离 。</td></tr><tr><td>shadowOffsetY</td><td>设置或返回阴影与形状的垂直距离。</td></tr></tbody></table><h4 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h4><ul><li>createLinearGradient(x1, y1, x2, y2)<br>createLinearGradient 方法接受 4 个参数，表示渐变的起点 (x1,y1) 与终点 (x2,y2)。</li><li>createRadialGradient(x1, y1, r1, x2, y2, r2)<br>createRadialGradient 方法接受 6 个参数，前三个定义一个以 (x1,y1) 为原点，半径为 r1 的圆，后三个参数则定义另一个以 (x2,y2) 为原点，半径为 r2   </li></ul><p>示例代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 线性渐变</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">let</span> gradient = ctx.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">0</span>)</span><br><span class="line"> gradient.addColorStop(<span class="number">0</span>, <span class="string">"#f06"</span>);</span><br><span class="line"> gradient.addColorStop(<span class="number">1</span>, <span class="string">"#6cf"</span>)</span><br><span class="line"> ctx.fillStyle = gradient       <span class="comment">//设置fillStyle为当前的渐变对象</span></span><br><span class="line"> ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 径向渐变</span></span><br><span class="line"> <span class="keyword">let</span> gradient1 = ctx.createRadialGradient(<span class="number">100</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line"> gradient1.addColorStop(<span class="number">0</span>, <span class="string">'#EE82EE'</span>)</span><br><span class="line"> gradient1.addColorStop(<span class="number">1</span>, <span class="string">'#FF00FF'</span>)</span><br><span class="line"> ctx.fillStyle = gradient1</span><br><span class="line"> ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line"> ctx.fill()</span><br></pre></td></tr></table></figure></p><p>径向渐变原理图<br><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=4055351684,3400036516&amp;fm=173&amp;s=0550653287B548230E55F9DB0000D0B1&amp;w=640&amp;h=203&amp;img.JPEG" alt="image"></p><h3 id="缩放、旋转、平移"><a href="#缩放、旋转、平移" class="headerlink" title="缩放、旋转、平移"></a>缩放、旋转、平移</h3><ul><li><p>缩放 scale(x,y)<br>x ：x坐标轴按 x 比例缩放<br>y ：x坐标轴按 y 比例缩放</p></li><li><p>旋转 rotate(angle)<br>angle ：坐标轴旋转x角度（角度变化模型和画圆的模型一样）</p></li><li><p>平移 translate(x,y)<br>x ：坐标原点向x轴方向平移x<br>y ：坐标原点向y轴方向平移y</p></li></ul><p>平移，缩放，旋转先后顺序不同，坐标轴的变化图，图片来源于网络<br><img src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=656556240,319451552&amp;fm=173&amp;s=40F63D72490F554F0AE9F1CA0000A0B1&amp;w=640&amp;h=519&amp;img.JPEG" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;悠哉游哉，开始学习啦，本文是学习canvas过程中的一些记录&lt;br&gt;
    
    </summary>
    
    
      <category term="数据可视化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>解决canvas绘图出现锯齿的问题</title>
    <link href="http://yoursite.com/2019/02/27/%E8%A7%A3%E5%86%B3canvas%E7%BB%98%E5%9B%BE%E5%87%BA%E7%8E%B0%E9%94%AF%E9%BD%BF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/02/27/解决canvas绘图出现锯齿的问题/</id>
    <published>2019-02-27T10:11:44.543Z</published>
    <updated>2019-02-27T10:11:45.157Z</updated>
    
    <content type="html"><![CDATA[<p>使用canvas动态绘制图形时，边缘处会被拉伸，模糊，甚至出现锯齿状，下面几行代码用于解决此问题<br><a id="more"></a></p><h4 id="出现原因"><a href="#出现原因" class="headerlink" title="出现原因"></a>出现原因</h4><blockquote><p>手机的宽是720像素的, 而这个canvas是按照小于720像素画出来的, 所以在720像素的手机上显示时, 这个canvas的内容其实是经过拉伸的, 所以会出现模糊和锯齿</p></blockquote><p>参考资料：<br><a href="https://blog.csdn.net/yiifaa/article/details/72812630" target="_blank" rel="noopener">canvas绘制出来的东西有锯齿,怎么解决?</a></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>原本的canvas同比例放大然后使用scale又把他缩放，设置的行内样式把canvas画布缩放为原本的比列<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 230. 260 是你要设置的画布宽高</span></span><br><span class="line">   myCanvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>)</span><br><span class="line">   ctx =myCanvas.getContext(<span class="string">'2d'</span>)</span><br><span class="line">   myCanvas.style.width = <span class="number">230</span> + <span class="string">'px'</span></span><br><span class="line">   myCanvas.style.height = <span class="number">260</span> + <span class="string">'px'</span></span><br><span class="line">   myCanvas.height = <span class="number">260</span> * <span class="built_in">window</span>.devicePixelRatio</span><br><span class="line">   myCanvas.width = <span class="number">230</span> * <span class="built_in">window</span>.devicePixelRatio</span><br><span class="line">   ctx.scale(<span class="built_in">window</span>.devicePixelRatio, <span class="built_in">window</span>.devicePixelRatio)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用canvas动态绘制图形时，边缘处会被拉伸，模糊，甚至出现锯齿状，下面几行代码用于解决此问题&lt;br&gt;
    
    </summary>
    
    
      <category term="数据可视化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>常兴项目总结</title>
    <link href="http://yoursite.com/2019/02/15/%E5%B8%B8%E5%85%B4%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/02/15/常兴项目总结/</id>
    <published>2019-02-15T03:26:36.779Z</published>
    <updated>2019-02-18T03:12:46.213Z</updated>
    
    <content type="html"><![CDATA[<p>航天常兴云平台是一个过渡性项目，该项目中尝试了同一项目多个系统管理，按管理层级划分权限角色，web端设备控制，实时参数分析等，为后期的项目奠定了基础<br><a id="more"></a></p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul><li>点击访问<a href="https://fire.htcxcloud.com" target="_blank" rel="noopener">测试环境地址</a> ，以下账号为测试账号<br>&nbsp;账号1： 13261616814<br>&nbsp;账号2：18510786995<br>&nbsp;密码： 123456</li><li>点击访问<a href="https://tower.im/attachments/17eb02b8a31c46287d2e536ff85b56c2/preview?t=0" target="_blank" rel="noopener">测试报告</a></li><li>点击访问<a href="https://tower.im/attachments/ca3a342fd13d9dde7d64e3e0e44c1162/preview?t=0" target="_blank" rel="noopener">功能简介</a><h3 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h3></li><li>大屏展示<br>主要展示设备、项目地理位置分布，各个系统地 设备运行状态，设备接入量统计等，包括告警、故障消息，处理效率。大屏展示主要由图表，曲线，轮播等组件组成，旨在直观的展现出数据的趋势。<br>常兴的大屏UI还原度大概在95%左右，屏幕适配也可以，但是故障消息的组件布局存在问题，当文案内容过多时，布局会比较拥挤。</li></ul><p><img src="/images/cx-home.png" alt="image"></p><ul><li><p>设备控制相关<br>设备相关模块功能比较复杂，主要设计设备列表，设备远程控制，设备故障处理，地理位置分布等。<br><img src="/images/cx-device.jpg" alt="image"></p></li><li><p>用户权限相关<br><img src="/images/cx-user.jpg" alt="image"></p></li><li><p>系统模块相关<br><img src="/images/cx-device.jpg" alt="image"></p></li></ul><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>不同得用户登录，分配不同得角色，所展示得页面内容也是不同得，主要分为页面级权限和按钮级权限（操作权限）。<br>具体权限相关内容参考<br><a href="https://xxm-cf.github.io/2018/08/31/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E4%B9%8B%E6%9D%83%E9%99%90%E7%9A%84%E8%AE%BE%E7%BD%AE" target="_blank" rel="noopener">权限控制之权限的设置</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;航天常兴云平台是一个过渡性项目，该项目中尝试了同一项目多个系统管理，按管理层级划分权限角色，web端设备控制，实时参数分析等，为后期的项目奠定了基础&lt;br&gt;
    
    </summary>
    
    
      <category term="项目总结" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>永生APP开发总结</title>
    <link href="http://yoursite.com/2019/01/15/%E6%B0%B8%E7%94%9FAPP%E5%BC%80%E5%8F%91%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/01/15/永生APP开发总结/</id>
    <published>2019-01-15T10:26:40.663Z</published>
    <updated>2019-01-15T10:26:41.224Z</updated>
    
    <content type="html"><![CDATA[<p>断断续续开发了快一个月，完成了两款APP，简单的总结下，好记性不如烂笔头嘛<br><a id="more"></a></p><h4 id="获取天气相关情况"><a href="#获取天气相关情况" class="headerlink" title="获取天气相关情况"></a>获取天气相关情况</h4><p> 通过定位得到当前位置，调用getWeather方法传入adCode，将获取到的天气相关信息保存到中，方便使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取天气情况，使用高德天气</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">getWeather (adcode) &#123; <span class="comment">// adcode为addressCode</span></span><br><span class="line">  <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">  AMap.plugin(<span class="string">'AMap.Weather'</span>, () =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> weather = <span class="keyword">new</span> AMap.Weather()</span><br><span class="line">    weather.getLive(adcode, (err, data) =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err, data)</span><br><span class="line">      self.$store.dispatch(<span class="string">'SetWeathers'</span>, data) <span class="comment">// 保存到vuex中</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="绘制周边地图"><a href="#绘制周边地图" class="headerlink" title="绘制周边地图"></a>绘制周边地图</h4><ul><li>点击查看周边地图<br>初始化滴哦图，以当前定位为地图中心，再次基础上绘制圆形区域标记</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">initMap () &#123;</span><br><span class="line">  <span class="keyword">this</span>.position = &#123; ...this.$route.query &#125;</span><br><span class="line">  <span class="keyword">let</span> lat = <span class="keyword">this</span>.position.lat || <span class="number">118.21</span></span><br><span class="line">  <span class="keyword">let</span> lng = <span class="keyword">this</span>.position.lng || <span class="number">120.30</span></span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">'aroundMap'</span>, &#123;</span><br><span class="line">    resizeEnable: <span class="literal">true</span>, <span class="comment">// </span></span><br><span class="line">    rotateEnable: <span class="literal">true</span>, <span class="comment">// 是否可旋转</span></span><br><span class="line">    zoom: <span class="number">14</span>,</span><br><span class="line">    expandZoomRange: <span class="literal">true</span>,</span><br><span class="line">    zooms: [<span class="number">3</span>, <span class="number">20</span>], <span class="comment">// 设置地图zoom级别</span></span><br><span class="line">    center: [lng, lat]</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">var</span> circle = <span class="keyword">new</span> AMap.Circle(&#123; <span class="comment">// 源泉覆盖物</span></span><br><span class="line">    center: <span class="keyword">new</span> AMap.LngLat(lng, lat), <span class="comment">// 圆心位置</span></span><br><span class="line">    radius: <span class="number">1000</span>, <span class="comment">// 半径</span></span><br><span class="line">    strokeColor: <span class="string">'#F33'</span>, <span class="comment">// 线颜色</span></span><br><span class="line">    strokeOpacity: <span class="number">0.5</span>, <span class="comment">// 线透明度</span></span><br><span class="line">    strokeWeight: <span class="number">1</span>, <span class="comment">// 线粗细度</span></span><br><span class="line">    fillColor: <span class="string">'#ee2200'</span>, <span class="comment">// 填充颜色</span></span><br><span class="line">    fillOpacity: <span class="number">0.2</span> <span class="comment">// 填充透明度</span></span><br><span class="line">  &#125;)</span><br><span class="line">  map.add(circle)</span><br><span class="line">  <span class="keyword">return</span> map</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="路径规划"><a href="#路径规划" class="headerlink" title="路径规划"></a>路径规划</h4><ul><li>通过起点重点经纬度，规划驾车路线</li></ul><p><a href="https://lbs.amap.com/api/javascript-api/reference/route-search" target="_blank" rel="noopener">高德API-路径规划</a></p><p>需要两个容器，id为navigatorMap的容器用来绘制地图，id为panel的容器用来绘制导航结果相关面板<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">initMap () &#123;</span><br><span class="line">  <span class="keyword">this</span>.toPosition = &#123; ...this.$route.query &#125;</span><br><span class="line">  <span class="keyword">let</span> fromLat = <span class="keyword">this</span>.positions.lat</span><br><span class="line">  <span class="keyword">let</span> fromLng = <span class="keyword">this</span>.positions.lng</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> toLat = <span class="keyword">this</span>.toPosition.lat</span><br><span class="line">  <span class="keyword">let</span> toLng = <span class="keyword">this</span>.toPosition.lng</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.positions.lng) &#123;</span><br><span class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">'navigatorMap'</span>, &#123;</span><br><span class="line">      resizeEnable: <span class="literal">true</span>,</span><br><span class="line">      center: [fromLng, fromLat], <span class="comment">// 地图中心点</span></span><br><span class="line">      zoom: <span class="number">10</span> <span class="comment">// 地图显示的缩放级别</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> driving = <span class="keyword">new</span> AMap.Driving(&#123;</span><br><span class="line">      map: map,</span><br><span class="line">      panel: <span class="string">'panel'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    driving.search(</span><br><span class="line">      <span class="keyword">new</span> AMap.LngLat(fromLng, fromLat), <span class="comment">// 起点</span></span><br><span class="line">      <span class="comment">// new AMap.LngLat(116.427281, 39.903719), // 起点</span></span><br><span class="line">      <span class="keyword">new</span> AMap.LngLat(toLng, toLat), <span class="comment">// 终点</span></span><br><span class="line">      (status, result) =&gt; &#123;</span><br><span class="line">        <span class="comment">// result 即是对应的驾车导航信息，相关数据结构文档请参考  https://lbs.amap.com/api/javascript-api/reference/route-search#m_DrivingResult</span></span><br><span class="line">        <span class="keyword">if</span> (status === <span class="string">'complete'</span>) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'绘制驾车路线完成'</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.$toast(<span class="string">'路线规划失败'</span>)</span><br><span class="line">          <span class="built_in">console</span>.error(<span class="string">'获取驾车数据失败：'</span> + result)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.$toast(<span class="string">'定位失败，请检查设置'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="拨打电话"><a href="#拨打电话" class="headerlink" title="拨打电话"></a>拨打电话</h4><ul><li>使用a标签的href，tel后面跟上制定的电话号码，即可实现</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.tel(:href=<span class="string">"`tel:$&#123;telePhone&#125;`"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;断断续续开发了快一个月，完成了两款APP，简单的总结下，好记性不如烂笔头嘛&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>换电脑不再烦恼，Settings sync插件同步VsCode设置</title>
    <link href="http://yoursite.com/2019/01/08/%E6%8D%A2%E7%94%B5%E8%84%91%E4%B8%8D%E5%86%8D%E7%83%A6%E6%81%BC%EF%BC%8CSettings%20sync%E6%8F%92%E4%BB%B6%E5%90%8C%E6%AD%A5VsCode%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/01/08/换电脑不再烦恼，Settings sync插件同步VsCode设置/</id>
    <published>2019-01-08T02:36:23.954Z</published>
    <updated>2019-01-08T02:36:24.445Z</updated>
    
    <content type="html"><![CDATA[<p>重装vscode之后，之前的配置都不见了，装装好插件一上午就没了，还好有settings sync,一键同步配置，换电脑不再烦恼<br><a id="more"></a></p><h3 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h3><p>文案参考<a href="https://blog.csdn.net/small_trees/article/details/79185942" target="_blank" rel="noopener">树苗先生 </a></p><ul><li>1、Settings Sync是vscode中同步设置和安装插件的小工具，在扩展商店中搜索并安装它   <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener">安装地址</a></li><li>2、登陆Github&gt;Your profile&gt; settings&gt;Developer settings&gt;personal access tokens&gt;generate new token，输入名称，勾选Gist，提交 </li><li>3、保存Github Access Token   </li><li>4、打开vscode，Ctrl+Shift+P打开命令框，输入sync，找到update/upload settings，输入Token，上传成功后会返回Gist ID，保存此Gist ID.   </li><li>5、若需在其他机器上DownLoad插件的话，同样，Ctrl+Shift+P打开命令框，输入sync，找到Download settings，会跳转到Github的Token编辑界面，点Edit，regenerate token，保存新生成的token，在vscode命令框中输入此Token，回车，再输入之前的Gist ID，即可同步插件和设置。  </li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>生成Gist key</li></ul><p><img src="https://media.giphy.com/media/xT9IglKxSqs2Wdwq2c/source.gif" alt="image"></p><ul><li>上传配置  </li></ul><p><img src="https://media.giphy.com/media/xT9Iglsi3CS9noE8tW/source.gif" alt="image"></p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Upload Key : Shift + Alt + U</span><br><span class="line"></span><br><span class="line">Download Key : Shift + Alt + D</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><p>上述步骤第步骤完成后，输区域会跳出一大段文本,复制GITHUB GIST的内容，在需要同步的另一台电脑上使用  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GitHub Token: 4be15ad02b4c1c7d3048dc3aecaca97412145bd3****</span><br><span class="line">GitHub Gist: 47e6403f9f8bb04346a6b3cc1d3****</span><br><span class="line">GitHub Gist Type: Secret</span><br></pre></td></tr></table></figure></li><li><p>如果忘记了之前按的Token,在github上执行 Regenerate token，重新生成，然后再次执行上面的步即可</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;重装vscode之后，之前的配置都不见了，装装好插件一上午就没了，还好有settings sync,一键同步配置，换电脑不再烦恼&lt;br&gt;
    
    </summary>
    
    
      <category term="vscode插件" scheme="http://yoursite.com/tags/vscode%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中的登录流程总结</title>
    <link href="http://yoursite.com/2018/12/24/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/12/24/vue项目中的登录流程总结/</id>
    <published>2018-12-24T07:56:55.988Z</published>
    <updated>2018-12-24T07:56:56.318Z</updated>
    
    <content type="html"><![CDATA[<p>简单总结一下vue中的登录流程<br><a id="more"></a></p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><ul><li>access_token: 用户token, 有效期一天</li><li>refresh_token: 刷新token, 有效期30天<blockquote><p>每次打开APP时候判断本地是否存在token,如果有切有效，则跳过登录，直接进入主页，否则跳转至登录页面，用户输入账号密码后，<br>利用vueRouter在路由变化时进行验证</p></blockquote></li></ul><h3 id="local-js"><a href="#local-js" class="headerlink" title="local.js"></a>local.js</h3><ul><li>定义读取，设置localStorage的方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> local = &#123;</span><br><span class="line">  get: <span class="function">(<span class="params">key</span>) =&gt;</span> &#123; <span class="comment">// 读取本地缓存</span></span><br><span class="line">    <span class="keyword">let</span> info = localStorage.getItem(key)</span><br><span class="line">    <span class="keyword">if</span> (info) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        info = <span class="built_in">JSON</span>.parse(info)</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (info &amp;&amp; <span class="keyword">typeof</span> info === <span class="string">'object'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> info</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  set: <span class="function">(<span class="params">key, info</span>) =&gt;</span> &#123; <span class="comment">// 储存信息</span></span><br><span class="line">    <span class="keyword">return</span> localStorage.setItem(key, <span class="built_in">JSON</span>.stringify(info))</span><br><span class="line">  &#125;,</span><br><span class="line">  remove: <span class="function">(<span class="params">key</span>) =&gt;</span> &#123; <span class="comment">// 删除</span></span><br><span class="line">    <span class="keyword">return</span> localStorage.removeItem(key)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> local</span><br></pre></td></tr></table></figure><h3 id="permission-js"><a href="#permission-js" class="headerlink" title="permission.js"></a>permission.js</h3><ul><li>利用vueRouter,在页面跳转时候进行判断，判断该账号是否为合法账号（拥有合法的token）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'@/router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'@/store'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">'/login'</span>, <span class="string">'/register'</span>, <span class="string">'/forget'</span>] <span class="comment">// 不重定向白名单</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  NProgress.start()</span><br><span class="line">  <span class="keyword">if</span> (store.getters.token.access_token) &#123;</span><br><span class="line">    <span class="comment">// 本地存储的有token信息，可直接登陆</span></span><br><span class="line">    <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) &#123;</span><br><span class="line">      next(&#123; <span class="attr">path</span>: <span class="string">'/'</span> &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 刷新token, 拉取最新用户信息  执行场景：1.刷新页面 2.每次自动登陆</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">JSON</span>.stringify(store.getters.user) === <span class="string">'&#123;&#125;'</span>) &#123;</span><br><span class="line">        store.dispatch(<span class="string">'RefreshToken'</span>, store.getters.token.refresh_token).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 刷新token</span></span><br><span class="line">          store.dispatch(<span class="string">'GetInfo'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 更新用户信息</span></span><br><span class="line">            next()</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            store.dispatch(<span class="string">'LogOut'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 退出，返回登录界面</span></span><br><span class="line">              next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          store.dispatch(<span class="string">'LogOut'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whiteList.indexOf(to.path) !== <span class="number">-1</span>) &#123; <span class="comment">// 白名单中的页面不做验证</span></span><br><span class="line">      next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">      NProgress.done()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>store的action中定义相关方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; requestLoginApi, getSelfApi, refreshTokenApi &#125; <span class="keyword">from</span> <span class="string">'@/service/api/login'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> local <span class="keyword">from</span> <span class="string">'@/assets/utils/local'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> Login = <span class="function">(<span class="params">&#123; commit, state &#125;, userInfo</span>) =&gt;</span> &#123; <span class="comment">// 登录</span></span><br><span class="line">  <span class="keyword">var</span> username = userInfo.account.trim()</span><br><span class="line">  <span class="keyword">var</span> checkPass = userInfo.checkPass.trim()</span><br><span class="line">  <span class="keyword">var</span> loginData = &#123;</span><br><span class="line">    username: username,</span><br><span class="line">    password: checkPass,</span><br><span class="line">    clientType: <span class="string">'APP'</span>,</span><br><span class="line">    pid: state.pid</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    requestLoginApi(loginData).then(<span class="function"><span class="params">rsp</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> respToken = &#123;</span><br><span class="line">        access_token: rsp.access_token,</span><br><span class="line">        refresh_token: rsp.refresh_token</span><br><span class="line">      &#125;</span><br><span class="line">      local.set(state.key.token, respToken)</span><br><span class="line">      commit(<span class="string">'SET_TOKEN'</span>, respToken) <span class="comment">// 登录成功后，本地储存token信息</span></span><br><span class="line">      resolve()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RefreshToken = <span class="function">(<span class="params">&#123; commit, state &#125;, token</span>) =&gt;</span> &#123; <span class="comment">// 刷新token</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    refreshTokenApi(&#123;</span><br><span class="line">      refresh_token: token</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">rsp</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> respToken = &#123;</span><br><span class="line">        access_token: rsp.access_token,</span><br><span class="line">        refresh_token: rsp.refresh_token</span><br><span class="line">      &#125;</span><br><span class="line">      local.set(state.key.token, respToken)</span><br><span class="line">      commit(<span class="string">'SET_TOKEN'</span>, respToken)</span><br><span class="line">      resolve()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> GetInfo = <span class="function">(<span class="params">&#123; commit, state &#125;</span>) =&gt;</span> &#123; <span class="comment">// 接口请求用户信息</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    getSelfApi().then(<span class="function"><span class="params">rsp</span> =&gt;</span> &#123;</span><br><span class="line">      commit(<span class="string">'SET_USER'</span>, rsp) <span class="comment">// 用户信息储存本地</span></span><br><span class="line">      resolve()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单总结一下vue中的登录流程&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ios下的new Date ()的坑</title>
    <link href="http://yoursite.com/2018/12/24/ios%E4%B8%8B%E7%9A%84new%20Date%20()%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2018/12/24/ios下的new Date ()的坑/</id>
    <published>2018-12-24T07:56:51.036Z</published>
    <updated>2018-12-24T08:00:26.254Z</updated>
    
    <content type="html"><![CDATA[<p>使用new Date()方法时  在ios该对象返回的是valid Date，这是为啥嘞？<br><a id="more"></a></p><p>以下代码在ios中可能会报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2018-08-11 12:00:00"</span>);</span><br></pre></td></tr></table></figure><p>在IOS5以上版本（不包含IOS5）中的Safari浏览器能正确解释出Javascript中的 new Date(‘2018-10-21’) 的日期对象</p><p>可以采用以下方法解决,或者使用 插件 dayjs<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2018-08-11 12:00:00"</span>.replace(<span class="regexp">/-/g</span>, <span class="string">"/"</span>));</span><br></pre></td></tr></table></figure></p><p>格式化时间</p><ul><li>做数据统计的时候，云端返回的数据是以5分钟为最小单位的，为了匹配数据，获取当前时间的时候应该计算出距离按当前时间最近的5分钟的整数时间点</li><li>思路: 时间戳对5分钟求余，再用当前时间 减去余数<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getTimeRange5 = <span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 获取</span></span><br><span class="line">  <span class="keyword">let</span> temp = <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Date</span>.now() - <span class="built_in">Date</span>.now() % temp</span><br><span class="line">&#125; <span class="comment">// 将当前时间转换为5分钟的整数倍 2018-12-17 24:37 ==&gt; 2018-12-17 24:35</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用new Date()方法时  在ios该对象返回的是valid Date，这是为啥嘞？&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>配合原生APP,云端实现h5的Zip更新文档</title>
    <link href="http://yoursite.com/2018/12/24/%E9%85%8D%E5%90%88%E5%8E%9F%E7%94%9FAPP,%E4%BA%91%E7%AB%AF%E5%AE%9E%E7%8E%B0h5%E7%9A%84Zip%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2018/12/24/配合原生APP,云端实现h5的Zip更新文档/</id>
    <published>2018-12-24T07:56:45.513Z</published>
    <updated>2018-12-24T07:56:45.895Z</updated>
    
    <content type="html"><![CDATA[<p>使用h5开发的APP,经常会需要更新一些需求或者解决bug,每次重新打包发布之后，用户需要重新下载APP,给开发调试和实际使用中带来很多不便，遂开发版本自动检查更新功能<br><a id="more"></a></p><h2 id="前端部分："><a href="#前端部分：" class="headerlink" title="前端部分："></a>前端部分：</h2><p>1.APP在打包的时候生成一份Json文件，保存该版本的基本信息  </p><ul><li>在build文件夹下新建build-version.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> ENV = <span class="built_in">require</span>(<span class="string">'../config/prod.env'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  fs.writeFileSync(</span><br><span class="line">    <span class="string">'./dist/version.json'</span>,</span><br><span class="line">    <span class="built_in">JSON</span>.stringify(</span><br><span class="line">      &#123;</span><br><span class="line">        version: ENV.VERSION_ENV.replace(<span class="regexp">/\"/g</span>, <span class="string">''</span>), <span class="comment">// app版本</span></span><br><span class="line">        pid: ENV.PID_ENV.replace(<span class="regexp">/\"/g</span>, <span class="string">''</span>), <span class="comment">// 项目pid</span></span><br><span class="line">        time: <span class="built_in">parseInt</span>(ENV.BUILDTIME_ENV.replace(<span class="regexp">/\"/g</span>, <span class="string">''</span>)), <span class="comment">// 打包时间（用作zip的版本号）</span></span><br><span class="line">        address: <span class="string">'$ADDRESS'</span>, <span class="comment">// 下载路劲</span></span><br><span class="line">        md5: <span class="string">'$MDS'</span> <span class="comment">// 下载文件所需的参数</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="literal">null</span>,</span><br><span class="line">      <span class="number">2</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>在build.js中引入build-version.js，打包时执行，保存版本信息</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> buildVersion = <span class="built_in">require</span>(<span class="string">'./build-version'</span>) <span class="comment">// 引入</span></span><br><span class="line"></span><br><span class="line">webpack(webpackConfig, (err, stats) =&gt; &#123;</span><br><span class="line">    ...other code...</span><br><span class="line">    buildVersion() <span class="comment">// 执行该方法，生成版本json文件</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>每次打开app的时候执行检查更新的函数，在app.vue中调用以下方法：</li></ol><ul><li>oldAppVersion： 本地的app版本号</li><li>newAppVersion： 云端拉取回来的版本号（最新）<blockquote><p>比较两个版本号，如果相同，说明没有大版本的更新（APP没有做改动），即可进行H5更新，再进行build版本号比较，如果云端版本更高，则调用APP的window.Matrix.upgradeH5 进行更新，<br>如果大版本号不相等，则zip更新无效，提示用户重新到运用市场下载最新版本</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Dialog &#125; <span class="keyword">from</span> <span class="string">'vant'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">zipUpdate</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> apiEnv = process.env.API_ENV</span><br><span class="line">  <span class="keyword">let</span> pidEnv = process.env.PID_ENV</span><br><span class="line">  <span class="keyword">let</span> versionEnv = process.env.VERSION_ENV</span><br><span class="line">  <span class="keyword">let</span> buildTimeEnv = process.env.BUILDTIME_ENV</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'当前APP版本号'</span>, versionEnv)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'当前build版本号'</span>, buildTimeEnv)</span><br><span class="line">  axios.get(<span class="string">`https://hy.hekr.me/h5update/version-<span class="subst">$&#123;pidEnv&#125;</span>-<span class="subst">$&#123;apiEnv&#125;</span>.json?`</span> + <span class="built_in">Math</span>.random())</span><br><span class="line">    .then(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> newVersion = data.h5</span><br><span class="line">      <span class="keyword">let</span> oldAppVersion = versionEnv.split(<span class="string">'.'</span>).join(<span class="string">''</span>)</span><br><span class="line">      <span class="keyword">let</span> newAppVersion = newVersion.version.split(<span class="string">'.'</span>).join(<span class="string">''</span>)</span><br><span class="line">      <span class="keyword">if</span> (oldAppVersion === newAppVersion) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Number</span>(newVersion.time) &gt; <span class="built_in">Number</span>(buildTimeEnv)) &#123;</span><br><span class="line">          Dialog.confirm(&#123;</span><br><span class="line">            title: <span class="string">'温馨提示'</span>,</span><br><span class="line">            message: <span class="string">'发现新的版本，是否更新？否则可能会影响您的正常使用！'</span>,</span><br><span class="line">            className: <span class="string">'hk-dialog'</span></span><br><span class="line">          &#125;)</span><br><span class="line">            .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> url = <span class="string">'https://hy.hekr.me/h5update/'</span> + newVersion.address.slice(<span class="number">2</span>)</span><br><span class="line">              <span class="keyword">let</span> md5 = newVersion.md5</span><br><span class="line">              <span class="built_in">window</span>.Matrix.upgradeH5(<span class="string">`<span class="subst">$&#123;newVersion.version&#125;</span>(<span class="subst">$&#123;newVersion.time&#125;</span>)`</span>, url, md5)</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">'update error'</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">Number</span>(newAppVersion) &gt; <span class="built_in">Number</span>(oldAppVersion)) &#123;</span><br><span class="line">        Dialog.alert(&#123;</span><br><span class="line">          title: <span class="string">'温馨提示'</span>,</span><br><span class="line">          message: <span class="string">'发现新版本的应用程序，需要下载重装新应用！否则可能会影响您的正常使用！'</span>,</span><br><span class="line">          className: <span class="string">'hk-dialog'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用h5开发的APP,经常会需要更新一些需求或者解决bug,每次重新打包发布之后，用户需要重新下载APP,给开发调试和实际使用中带来很多不便，遂开发版本自动检查更新功能&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中的图片预览</title>
    <link href="http://yoursite.com/2018/12/18/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88/"/>
    <id>http://yoursite.com/2018/12/18/vue项目中的图片预览/</id>
    <published>2018-12-18T11:44:47.102Z</published>
    <updated>2018-12-18T11:46:23.859Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目中需要是使用图片预览，推荐连个比较顺手的插件<br><a id="more"></a></p><h3 id="vue-photo-preview"><a href="#vue-photo-preview" class="headerlink" title="vue-photo-preview"></a>vue-photo-preview</h3><ul><li>基于photoswipe的vue图片预览插件</li></ul><p>使用方法<br>安装 引入之后，在img标签上加上preview分组属性，即可使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install vue-photo-preview --save</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引入</span></span><br><span class="line">import preview from <span class="string">'vue-photo-preview'</span></span><br><span class="line">import <span class="string">'vue-photo-preview/dist/skin.css'</span></span><br><span class="line">Vue.use(preview)</span><br><span class="line">//或者</span><br><span class="line">//var option=&#123;....&#125; option配置请查看 http://photoswipe.com/documentation/options.html</span><br><span class="line">//Vue.use(preview,option)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># html</span><br><span class="line"><span class="comment">//在img标签添加preview属性 preview值相同即表示为同一组</span></span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span> preview=<span class="string">"0"</span> preview-text=<span class="string">"描述文字"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分组</span></span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span> preview=<span class="string">"1"</span> preview-text=<span class="string">"描述文字"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span> preview=<span class="string">"1"</span> preview-text=<span class="string">"描述文字"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span> preview=<span class="string">"2"</span> preview-text=<span class="string">"描述文字"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span> preview=<span class="string">"2"</span> preview-text=<span class="string">"描述文字"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="vant-的ImagePreview"><a href="#vant-的ImagePreview" class="headerlink" title="vant 的ImagePreview"></a>vant 的ImagePreview</h3><p><a href="https://youzan.github.io/vant/#/zh-CN/image-preview" target="_blank" rel="noopener">官方文档发链接</a></p><ul><li>ImagePreview和其他组件不同，不是通过HTML结构的方式来使用，而是通过函数调用的方式。使用前需要先引入它。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ImagePreview &#125; <span class="keyword">from</span> <span class="string">'vant'</span> <span class="comment">// 引入</span></span><br><span class="line"></span><br><span class="line">previewImg () &#123;</span><br><span class="line">    ImagePreview([</span><br><span class="line">      <span class="string">'https://img.yzcdn.cn/1.jpg'</span>, <span class="comment">// 图片地址</span></span><br><span class="line">      <span class="string">'https://img.yzcdn.cn/2.jpg'</span></span><br><span class="line">    ])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目中需要是使用图片预览，推荐连个比较顺手的插件&lt;br&gt;
    
    </summary>
    
    
      <category term="vur" scheme="http://yoursite.com/tags/vur/"/>
    
  </entry>
  
  <entry>
    <title>web端常用的导出列表</title>
    <link href="http://yoursite.com/2018/12/07/%E5%AF%BC%E5%87%BA%E5%88%97%E8%A1%A8%20(1)/"/>
    <id>http://yoursite.com/2018/12/07/导出列表 (1)/</id>
    <published>2018-12-07T09:26:17.659Z</published>
    <updated>2018-12-07T09:26:18.046Z</updated>
    
    <content type="html"><![CDATA[<p>需要后端接口配合，实现导出报表功能<br><a id="more"></a><br>qs模块了解一下啊</p><ul><li>qs.parse()将URL解析成对象的形式</li><li>qs.stringify()将对象 序列化成URL的形式，以&amp;进行拼接</li></ul><p>导出报表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">'pug'</span>&gt;</span></span><br><span class="line">    el-button.hekr-btn(</span><br><span class="line">      type="primary"</span><br><span class="line">      size="small"</span><br><span class="line">      icon="iconfont icon-daochu"</span><br><span class="line">      @click="exportTable"</span><br><span class="line">    ) 导出列表</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"> methods: &#123;</span></span><br><span class="line"><span class="javascript">    exportTable () &#123; <span class="comment">// 导出报表</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> params = &#123;</span></span><br><span class="line"><span class="javascript">        ctrlKey: <span class="keyword">this</span>.$route.query.ctrlKey, <span class="comment">// 安全验证所需要的key，根据接口需要，非必须</span></span></span><br><span class="line"><span class="javascript">        Authorization: <span class="string">`Bearer`</span> + <span class="keyword">this</span>.token.access_token,  <span class="comment">// 传入token做作安全校验</span></span></span><br><span class="line"><span class="javascript">        ...this.searchParams <span class="comment">// 列表筛选的参数</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> queryStr = qs.stringify(params)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> api = <span class="string">'/v1/device/subDevice/export'</span> <span class="comment">// 后端导出API</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> src = <span class="string">`<span class="subst">$&#123;server.fire.url&#125;</span><span class="subst">$&#123;api&#125;</span>?<span class="subst">$&#123;queryStr&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.clickLink(src)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    clickLink (src) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> oA = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>)</span></span><br><span class="line"><span class="undefined">      oA.href = src</span></span><br><span class="line"><span class="undefined">      oA.click()</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"> &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要后端接口配合，实现导出报表功能&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Vue 使用nprogress&amp;路由拦截</title>
    <link href="http://yoursite.com/2018/12/07/Vue%20%E4%BD%BF%E7%94%A8nprogress&amp;%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA/"/>
    <id>http://yoursite.com/2018/12/07/Vue 使用nprogress&amp;路由拦截/</id>
    <published>2018-12-07T09:26:04.378Z</published>
    <updated>2018-12-07T09:33:18.385Z</updated>
    
    <content type="html"><![CDATA[<p>vue项目中的进度条使用以及路由拦截相关<br><a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'@/router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'@/store'</span></span><br><span class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">'nprogress'</span> <span class="comment">// Progress 进度条</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'nprogress/nprogress.css'</span><span class="comment">// Progress 进度条样式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单配置</span></span><br><span class="line">NProgress.configure(&#123; <span class="attr">color</span>: <span class="string">'#f06'</span>, <span class="attr">easing</span>: <span class="string">'ease'</span>, <span class="attr">speed</span>: <span class="number">500</span>, <span class="attr">showSpinner</span>: <span class="literal">false</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">'/login'</span>, <span class="string">'/register'</span>, <span class="string">'/forget'</span>] <span class="comment">// 不重定向白名单</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  NProgress.start()</span><br><span class="line">  <span class="keyword">if</span> (store.getters.token.access_token) &#123;</span><br><span class="line">    <span class="comment">// 本地存储的有token信息，可直接登陆</span></span><br><span class="line">    <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) &#123;</span><br><span class="line">      next(&#123; <span class="attr">path</span>: <span class="string">'/'</span> &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 刷新token, 拉取最新用户信息  执行场景：1.刷新页面 2.每次自动登陆</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">JSON</span>.stringify(store.getters.user) === <span class="string">'&#123;&#125;'</span>) &#123;</span><br><span class="line">        store.dispatch(<span class="string">'RefreshToken'</span>, store.getters.token.refresh_token).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          store.dispatch(<span class="string">'GetInfo'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            next()</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            store.dispatch(<span class="string">'LogOut'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          store.dispatch(<span class="string">'LogOut'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whiteList.indexOf(to.path) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">      NProgress.done()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  NProgress.done() <span class="comment">// 结束Progress</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue项目中的进度条使用以及路由拦截相关&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue中使用qrcode生成二维码</title>
    <link href="http://yoursite.com/2018/12/07/vue%E4%B8%AD%E4%BD%BF%E7%94%A8qrcode%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <id>http://yoursite.com/2018/12/07/vue中使用qrcode生成二维码/</id>
    <published>2018-12-07T09:26:00.750Z</published>
    <updated>2018-12-07T09:26:01.089Z</updated>
    
    <content type="html"><![CDATA[<p>简单介绍vue生成二维码<br><a id="more"></a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save qrcode</span><br></pre></td></tr></table></figure><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> QRCode <span class="keyword">from</span> <span class="string">'qrcodejs2'</span></span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在html中</span></span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"qrcode"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> <span class="comment">// 生成二维码的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// js中</span></span><br><span class="line">created () &#123;</span><br><span class="line">    <span class="keyword">this</span>.creatQrcode()</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  creatQrcode() &#123;  </span><br><span class="line">     <span class="keyword">let</span> qrcode = <span class="keyword">new</span> QRCode(<span class="string">'qrcode'</span>, &#123;  <span class="comment">// 或者使用this.$refs选择元素</span></span><br><span class="line">     width: <span class="number">100</span>,  </span><br><span class="line">     height: <span class="number">100</span>, <span class="comment">// 高度  </span></span><br><span class="line">     text: <span class="string">'56663159'</span>, <span class="comment">// 二维码内容</span></span><br><span class="line">     image: <span class="string">''</span>  </span><br><span class="line">     <span class="comment">// render: 'canvas' // 设置渲染方式（有两种方式 table和canvas，默认是canvas）  </span></span><br><span class="line">     <span class="comment">// background: '#f0f'  </span></span><br><span class="line">     <span class="comment">// foreground: '#ff0'  </span></span><br><span class="line"> &#125;)  </span><br><span class="line">   <span class="built_in">console</span>.log(qrcode)  </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qrcode.clear(); <span class="comment">// 清除代码</span></span><br><span class="line">qrcode.makeCode(<span class="string">"https://m.qtshe.com"</span>); <span class="comment">// 生成另外一个二维码, 括号内为二维码内容</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单介绍vue生成二维码&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>深拷贝与浅拷贝</title>
    <link href="http://yoursite.com/2018/12/07/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
    <id>http://yoursite.com/2018/12/07/深拷贝与浅拷贝/</id>
    <published>2018-12-07T09:25:56.141Z</published>
    <updated>2018-12-07T09:36:28.920Z</updated>
    
    <content type="html"><![CDATA[<p>引用一篇大神的博客，了解一下拷贝<br><a id="more"></a></p><p><a href="https://blog.csdn.net/weixin_37719279/article/details/81240658" target="_blank" rel="noopener">读懂深浅拷贝</a></p><p>可以简单的定义一个函数实现深拷贝<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> deepClone = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> Json.parse(Json.stringify())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引用一篇大神的博客，了解一下拷贝&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>数据对接</title>
    <link href="http://yoursite.com/2018/12/07/Thing.js%E5%AD%A6%E4%B9%A0%E4%B9%8B%20%E6%95%B0%E6%8D%AE%E5%AF%B9%E6%8E%A5/"/>
    <id>http://yoursite.com/2018/12/07/Thing.js学习之 数据对接/</id>
    <published>2018-12-07T09:25:52.531Z</published>
    <updated>2018-12-07T09:25:52.876Z</updated>
    
    <content type="html"><![CDATA[<p>数据对接跟平常使用的数据对接方式相同，ajax请求和websocket连接<br><a id="more"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> THING.App(&#123;</span><br><span class="line">    url: <span class="string">'models/storehouse'</span> <span class="comment">// 场景模型地址</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;!--创建界面组件--&gt;</span><br><span class="line"><span class="keyword">var</span> panel = <span class="keyword">new</span> THING.widget.Panel(&#123;</span><br><span class="line">    name: <span class="string">'温度面板'</span>，</span><br><span class="line">    hasTitle: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> dataObj = &#123;</span><br><span class="line">    t1: <span class="string">'10℃'</span> ,</span><br><span class="line">    t2: <span class="string">'10℃'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">panel.add(<span class="string">'dataObj'</span>, <span class="string">'t1'</span>).name(<span class="string">'水温'</span>).isChangeValue(<span class="literal">true</span>)</span><br><span class="line">panel.add(<span class="string">'dataObj'</span>, <span class="string">'t2'</span>).name(<span class="string">'气温'</span>).isChangeValue(<span class="literal">true</span>)‘</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************* 以下为websoket数据对接 ********************/</span></span><br><span class="line"><span class="comment">// 对接自有websoket服务器</span></span><br><span class="line"><span class="keyword">var</span> ws = <span class="keyword">new</span> WebSocket(<span class="string">'ws://3dmmd.cn:82'</span>);</span><br><span class="line"><span class="comment">// 建立 web socket 连接成功触发事件</span></span><br><span class="line">ws.onopen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"websoket服务器连接成功..."</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收服务端数据时触发事件</span></span><br><span class="line">ws.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"websoket接收数据："</span> + evt.data);</span><br><span class="line">    <span class="comment">// ***将获得的数据赋值到场景中***</span></span><br><span class="line">    dataObj.t1 = evt.data + <span class="string">'°C'</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************* 以下为ajax数据对接 ********************/</span></span><br><span class="line"><span class="comment">// 接收服务端数据时触发事件</span></span><br><span class="line">update = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ***如设置服务器的CORS，实现跨域访问。会更简单***</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ***下例采用的不设置CORS的跨域实现方案*** </span></span><br><span class="line">    <span class="comment">// 服务器返回的数据格式为 callback(&#123;"state":"success","data":29&#125;)</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">"get"</span>,</span><br><span class="line">        url: <span class="string">"http://3dmmd.cn:83/ajax"</span>,</span><br><span class="line">        <span class="comment">// url: "http://mock.hekr.me/mock/137/api/v1/enterprise/dangerous", // mock数据对接</span></span><br><span class="line">        dataType: <span class="string">"jsonp"</span>,</span><br><span class="line">        jsonpCallback: <span class="string">"callback"</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(d)</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'拉取数据：'</span> + d.data);</span><br><span class="line">            <span class="comment">// ***将获得的数据赋值到场景中***</span></span><br><span class="line">            dataObj.t2 = d.data + <span class="string">'°C'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//每1秒更新一个数据</span></span><br><span class="line">setInterval(update, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据对接跟平常使用的数据对接方式相同，ajax请求和websocket连接&lt;br&gt;
    
    </summary>
    
    
      <category term="Thing.js" scheme="http://yoursite.com/tags/Thing-js/"/>
    
  </entry>
  
  <entry>
    <title>Thing.js 之 创建App对象</title>
    <link href="http://yoursite.com/2018/12/07/Thing.js%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%20App%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2018/12/07/Thing.js 学习之 App对象/</id>
    <published>2018-12-07T09:25:49.247Z</published>
    <updated>2018-12-07T09:30:56.373Z</updated>
    
    <content type="html"><![CDATA[<p>介绍ThingJs中创建对象的常用方法<br><a id="more"></a></p><h3 id="创建App"><a href="#创建App" class="headerlink" title="创建App"></a>创建App</h3><p>1.直接new 一个 app<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 创建App的方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> THING.App(&#123;</span><br><span class="line">  url: <span class="string">'园区地址'</span>,</span><br><span class="line">  complete: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'创建完成,园区Id:'</span> + <span class="keyword">this</span>.id)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>2.使用create<br>使用app.create创建，但该方法会导致初始化的时候 ，摄像机的视角处在[0, 0, 0]的位置，并且整个场景被放大到最大值，<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用create</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> THING.App()</span><br><span class="line"><span class="keyword">let</span> obj = app.create(&#123;</span><br><span class="line">  type: <span class="string">'Campus'</span>,</span><br><span class="line">  url: <span class="string">'园区地址'</span>,</span><br><span class="line">  complete: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'创建完成,园区Id:'</span> + <span class="keyword">this</span>.id)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="App对象的属性"><a href="#App对象的属性" class="headerlink" title="App对象的属性"></a>App对象的属性</h3><p><a href="http://www.thingjs.com/guide/?m=api#THING.App.html" target="_blank" rel="noopener">官方教程链接</a><br>参数 | 类型 | 备注<br>—|—|—<br>url    | String | 初始场景资源路径<br>complete | function | 初始化完成函数回调<br>success | function | 场景资源加载成功回调<br>error | function | 场景资源加载失败回调<br>progress | function | 场景资源加载进度回调<br>background | Number/String | 背景颜色/ 图片<br>skyBox | String    | 天空盒资源名称分别’BlueSky’,’MilkyWay’,’Night’,’SunCloud’<br>isMobileDevice | Boolean | 判断是否是移动端设备</p><h3 id="App对象的方法"><a href="#App对象的方法" class="headerlink" title="App对象的方法"></a>App对象的方法</h3><p><a href="http://www.thingjs.com/guide/?m=api#THING.App.html" target="_blank" rel="noopener">官方教程</a></p><p><strong>create(type, name, url, position, complete)</strong><br>参数 | 类型 | 备注<br>—|—|—<br>type | String | 物体类型<br>name | String | 物体名称<br>url | String | 物体模型链接<br>position | Array | 物体生成位置<br>complete| function | 物体生成后的回调</p><p><strong>on(eventType, selector, userData, callback, tag?, priority)</strong><br>参数 | 类型 | 备注<br>—|—|—<br>ventType | String | 事件名称<br>selector | String | 物体类型选择信息<br>userData | Object | 事件绑定自定义数据, 如果是 Function 类型，也表示回调函数参数<br>callback | function     | 事件触发的回调函数<br>tag? | String | 事件名字标记<br>priority | Number | ? 优先级，数值越大优先级越高</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍ThingJs中创建对象的常用方法&lt;br&gt;
    
    </summary>
    
    
      <category term="Thingjs" scheme="http://yoursite.com/tags/Thingjs/"/>
    
  </entry>
  
  <entry>
    <title>vue自定义指令实现 水波点击效果</title>
    <link href="http://yoursite.com/2018/12/07/vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E5%AE%9E%E7%8E%B0%20%E6%B0%B4%E6%B3%A2%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C%20(1)/"/>
    <id>http://yoursite.com/2018/12/07/vue自定义指令实现 水波点击效果 (1)/</id>
    <published>2018-12-07T09:25:41.892Z</published>
    <updated>2018-12-07T09:25:42.217Z</updated>
    
    <content type="html"><![CDATA[<p>自定义指令实现点击水波蔓延效果<br><a id="more"></a><br>实现原理<br> 点击时候获取鼠标位置，创建一个span标签，执行向外扩散，透明度由1变为0的动画<br>定义js文件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ripple = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> addRippleEffect = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var target = e.target</span></span><br><span class="line">    <span class="keyword">var</span> target = el</span><br><span class="line">    <span class="comment">// if (target.className.toLowerCase() !== 'btn') return false</span></span><br><span class="line">    target.style.overflow = <span class="string">'hidden'</span></span><br><span class="line">    <span class="keyword">var</span> rect = target.getBoundingClientRect()</span><br><span class="line">    <span class="keyword">var</span> ripple = target.querySelector(<span class="string">'.ripple'</span>)</span><br><span class="line">    <span class="keyword">if</span> (!ripple) &#123;</span><br><span class="line">      ripple = <span class="built_in">document</span>.createElement(<span class="string">'span'</span>)</span><br><span class="line">      ripple.className = <span class="string">'ripple'</span></span><br><span class="line">      ripple.style.height = ripple.style.width = <span class="built_in">Math</span>.max(rect.width, rect.height) + <span class="string">'px'</span></span><br><span class="line">      target.appendChild(ripple)</span><br><span class="line">    &#125;</span><br><span class="line">    ripple.classList.remove(<span class="string">'show'</span>)</span><br><span class="line">    <span class="keyword">var</span> top = e.pageY - rect.top - ripple.offsetHeight / <span class="number">2</span> - <span class="built_in">document</span>.body.scrollTop</span><br><span class="line">    <span class="keyword">var</span> left = e.pageX - rect.left - ripple.offsetWidth / <span class="number">2</span> - <span class="built_in">document</span>.body.scrollLeft</span><br><span class="line">    ripple.style.top = top + <span class="string">'px'</span></span><br><span class="line">    ripple.style.left = left + <span class="string">'px'</span></span><br><span class="line">    ripple.classList.add(<span class="string">'show'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  el.addEventListener(<span class="string">'click'</span>, addRippleEffect, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ripple</span><br></pre></td></tr></table></figure></p><p>定义样式,需全局</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.ripple</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  background rgba(244, 172, 40 .4)</span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">transform</span> scale(<span class="number">0</span>)</span><br><span class="line">  <span class="attribute">pointer-events</span> none</span><br><span class="line"><span class="selector-class">.ripple</span><span class="selector-class">.show</span></span><br><span class="line">  animation ripple .75s ease-out</span><br><span class="line">@keyframes ripple</span><br><span class="line">  from</span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">0</span>)</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">  to</span><br><span class="line">    <span class="attribute">transform</span> scale(<span class="number">2</span>)</span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>main.js中 引入并注册指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Ripple from &apos;@/assets/utils/ripple&apos;</span><br><span class="line">Vue.directive(&apos;ripple&apos;, &#123;</span><br><span class="line">  inserted: Ripple</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.item(v-ripple=&quot;&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自定义指令实现点击水波蔓延效果&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>web端常用的导出列表</title>
    <link href="http://yoursite.com/2018/09/03/%E5%AF%BC%E5%87%BA%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2018/09/03/导出列表/</id>
    <published>2018-09-03T08:07:11.287Z</published>
    <updated>2018-09-03T08:07:11.710Z</updated>
    
    <content type="html"><![CDATA[<p>需要后端接口配合，实现导出报表功能<br><a id="more"></a><br>qs模块了解一下啊</p><ul><li>qs.parse()将URL解析成对象的形式</li><li>qs.stringify()将对象 序列化成URL的形式，以&amp;进行拼接</li></ul><p>导出报表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">'pug'</span>&gt;</span></span><br><span class="line">    el-button.hekr-btn(</span><br><span class="line">      type="primary"</span><br><span class="line">      size="small"</span><br><span class="line">      icon="iconfont icon-daochu"</span><br><span class="line">      @click="exportTable"</span><br><span class="line">    ) 导出列表</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"> methods: &#123;</span></span><br><span class="line"><span class="javascript">    exportTable () &#123; <span class="comment">// 导出报表</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> params = &#123;</span></span><br><span class="line"><span class="javascript">        ctrlKey: <span class="keyword">this</span>.$route.query.ctrlKey, <span class="comment">// 安全验证所需要的key，根据接口需要，非必须</span></span></span><br><span class="line"><span class="javascript">        Authorization: <span class="string">`Bearer`</span> + <span class="keyword">this</span>.token.access_token,  <span class="comment">// 传入token做作安全校验</span></span></span><br><span class="line"><span class="javascript">        ...this.searchParams <span class="comment">// 列表筛选的参数</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> queryStr = qs.stringify(params)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> api = <span class="string">'/v1/device/subDevice/export'</span> <span class="comment">// 后端导出API</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> src = <span class="string">`<span class="subst">$&#123;server.fire.url&#125;</span><span class="subst">$&#123;api&#125;</span>?<span class="subst">$&#123;queryStr&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.clickLink(src)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    clickLink (src) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> oA = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>)</span></span><br><span class="line"><span class="undefined">      oA.href = src</span></span><br><span class="line"><span class="undefined">      oA.click()</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"> &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要后端接口配合，实现导出报表功能&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>权限控制之权限的设置</title>
    <link href="http://yoursite.com/2018/08/31/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E4%B9%8B%E6%9D%83%E9%99%90%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/08/31/权限控制之权限的设置/</id>
    <published>2018-08-31T09:49:15.101Z</published>
    <updated>2018-08-31T09:46:50.299Z</updated>
    
    <content type="html"><![CDATA[<p>权限设置<br><a id="more"></a></p><h4 id="什么是角色？"><a href="#什么是角色？" class="headerlink" title="什么是角色？"></a>什么是角色？</h4><p>角色就是用户的身份，通常包含其权限信息。</p><h4 id="权限的设置？"><a href="#权限的设置？" class="headerlink" title="权限的设置？"></a>权限的设置？</h4><p>权限的设置就是在角色里设置该角色是否具有某一些权限。</p><h5 id="一、问题："><a href="#一、问题：" class="headerlink" title="一、问题："></a>一、问题：</h5><ol><li>登录账号的权限与其新建角色的可选权限是否一致？自然是一致的</li></ol><h5 id="二、需求："><a href="#二、需求：" class="headerlink" title="二、需求："></a>二、需求：</h5><ol><li>选择角色权限时，可选权限应当为该登录账户下所具有的权限。不具有的权限应不显示。</li></ol><h4 id="权限设置的方案？"><a href="#权限设置的方案？" class="headerlink" title="权限设置的方案？"></a>权限设置的方案？</h4><h5 id="一、思路："><a href="#一、思路：" class="headerlink" title="一、思路："></a>一、思路：</h5><ol><li>前端应具有一个全部权限的数组moduleList；</li><li>根据登录账号的不同匹配moduleList，生成新的数组；</li><li>选择角色采用element-ui的tree组件进行渲染。</li></ol><h5 id="二、默认的全部权限数组"><a href="#二、默认的全部权限数组" class="headerlink" title="二、默认的全部权限数组"></a>二、默认的全部权限数组</h5><p>数据结构参考el-tree组件的结构，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">moduleList: [</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'survey'</span>, <span class="attr">label</span>: <span class="string">'项目概况'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'realTime'</span>, <span class="attr">label</span>: <span class="string">'实时数据'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'curve'</span>,</span><br><span class="line">      label: <span class="string">'曲线分析'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'curveHistory'</span>, <span class="attr">label</span>: <span class="string">'历史曲线'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'curveConsume'</span>, <span class="attr">label</span>: <span class="string">'耗量曲线'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'report'</span>,</span><br><span class="line">      label: <span class="string">'报表分析'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'reportUserPart'</span>, <span class="attr">label</span>: <span class="string">'用户分报'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'reportUser'</span>, <span class="attr">label</span>: <span class="string">'用户报表'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'warning'</span>, <span class="attr">label</span>: <span class="string">'维保管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'push'</span>, <span class="attr">label</span>: <span class="string">'推送管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'project'</span>,</span><br><span class="line">      label: <span class="string">'项目管理'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">'projectPoint'</span>,</span><br><span class="line">          label: <span class="string">'计量点管理'</span>,</span><br><span class="line">          disabled: <span class="literal">false</span>,</span><br><span class="line">          children: [</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="string">'projectPointDevice'</span>, <span class="attr">label</span>: <span class="string">'设备管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="string">'projectPointPoweroff'</span>, <span class="attr">label</span>: <span class="string">'停电纪录'</span>&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'project_param'</span>, <span class="attr">label</span>: <span class="string">'参数详情'</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'user'</span>, <span class="attr">label</span>: <span class="string">'用户管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure></p><h5 id="三、vuex中authority-js过滤设置当前登录用户的moduleList"><a href="#三、vuex中authority-js过滤设置当前登录用户的moduleList" class="headerlink" title="三、vuex中authority.js过滤设置当前登录用户的moduleList"></a>三、vuex中authority.js过滤设置当前登录用户的moduleList</h5><p>需要传入用户权限表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defaultData&#125; <span class="keyword">from</span> <span class="string">'@/assets/utils/defaultData'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤权限模块</span></span><br><span class="line"><span class="keyword">const</span> filterModule = <span class="function">(<span class="params">allList, authorities</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> arr = allList.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.children &amp;&amp; item.children.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      item.children = filterModule(item.children, authorities)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (authorities.includes(item.id)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    moduleList: [] <span class="comment">// 权限功能模块</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_MODULELIST: <span class="function">(<span class="params">state, payload</span>) =&gt;</span> &#123;</span><br><span class="line">      state.moduleList = filterModule(defaultData.moduleList, payload)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> route</span><br></pre></td></tr></table></figure><h5 id="四、调用设置modultList的位置"><a href="#四、调用设置modultList的位置" class="headerlink" title="四、调用设置modultList的位置"></a>四、调用设置modultList的位置</h5><p>需要在登录获取到用户信息后调用，传入用户权限表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取登录账户信息</span></span><br><span class="line">GetInfo: <span class="function">(<span class="params">&#123; commit, state &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    getUserInfo().then(<span class="function"><span class="params">rsp</span> =&gt;</span> &#123;</span><br><span class="line">      commit(<span class="string">'SET_USERINFO'</span>, rsp)</span><br><span class="line">      commit(<span class="string">'SET_AUTHORITIES'</span>, authorities)</span><br><span class="line">      commit(<span class="string">'SET_MODULELIST'</span>, state.authorities)</span><br><span class="line">      resolve()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h5 id="五、使用"><a href="#五、使用" class="headerlink" title="五、使用"></a>五、使用</h5><p>只需要在新增编辑角色的代码里，把state.authority.moduleList设置到el-tree就大功告成了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;权限设置&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>基于Vue2.0的后台管理系统之权限控制</title>
    <link href="http://yoursite.com/2018/08/31/%E5%9F%BA%E4%BA%8EVue2.0%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B9%8B%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6(1)/"/>
    <id>http://yoursite.com/2018/08/31/基于Vue2.0的后台管理系统之权限控制(1)/</id>
    <published>2018-08-31T09:47:17.214Z</published>
    <updated>2018-08-31T09:42:23.273Z</updated>
    
    <content type="html"><![CDATA[<p>动态路由、页面级别、按钮级别的权限控制<br><a id="more"></a></p><h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><p>基于Vue2.0的后台管理系统，应用的主要技术有：Vue2.0+，Element-ui，Pug，Scss，Axios，Vuex，VueRouter等。<br><br>因为采用前后端分离的开发模式，有部分权限需要前端进行控制。<br><br>通常涉及的问题有：</p><ol><li>权限表的获取，如何获取？</li><li>权限的控制，如何控制？</li><li>权限的设置，怎么设置？</li></ol><h4 id="方案："><a href="#方案：" class="headerlink" title="方案："></a>方案：</h4><h5 id="一、权限表通过后端接口返回；"><a href="#一、权限表通过后端接口返回；" class="headerlink" title="一、权限表通过后端接口返回；"></a>一、权限表通过后端接口返回；</h5><p><a href="http://note.youdao.com/noteshare?id=6e086832a055a316d4ca5ac1e155827e" target="_blank" rel="noopener">查看关于权限表的详细内容</a></p><h5 id="二、权限通常分为页面级的权限与按钮级的权限"><a href="#二、权限通常分为页面级的权限与按钮级的权限" class="headerlink" title="二、权限通常分为页面级的权限与按钮级的权限"></a>二、权限通常分为页面级的权限与按钮级的权限</h5><ol><li><a href="https://note.youdao.com/web/#/file/recent/markdown/AD5B58CE3286406390B958897D731E9F/" target="_blank" rel="noopener">页面级权限控制方案-动态路由；</a></li><li><a href="https://note.youdao.com/web/#/file/recent/markdown/0D86BC6A04E640A6859D7790AE915A0F/" target="_blank" rel="noopener">按钮级权限控制方案-自定义指令</a><h5 id="三、权限通常通过给用户添加角色实现，角色包含各种权限设置"><a href="#三、权限通常通过给用户添加角色实现，角色包含各种权限设置" class="headerlink" title="三、权限通常通过给用户添加角色实现，角色包含各种权限设置"></a>三、权限通常通过给用户添加角色实现，角色包含各种权限设置</h5><a href="https://note.youdao.com/web/#/file/recent/markdown/0D86BC6A04E640A6859D7790AE915A0F/" target="_blank" rel="noopener">角色权限的设置？</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;动态路由、页面级别、按钮级别的权限控制&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>权限控制之权限表</title>
    <link href="http://yoursite.com/2018/08/31/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E4%B9%8B%E6%9D%83%E9%99%90%E8%A1%A8/"/>
    <id>http://yoursite.com/2018/08/31/权限控制之权限表/</id>
    <published>2018-08-31T09:47:17.213Z</published>
    <updated>2018-08-31T09:43:10.750Z</updated>
    
    <content type="html"><![CDATA[<p>权限表的获取<br><a id="more"></a></p><h4 id="一、权限表authorities的获取："><a href="#一、权限表authorities的获取：" class="headerlink" title="一、权限表authorities的获取："></a>一、权限表authorities的获取：</h4><ol><li>登录（/login接口）后可以获取用户的token；</li><li>请求用户信息接口（/self），获取用户权限表authorities；</li></ol><h4 id="二、权限表authorities的说明："><a href="#二、权限表authorities的说明：" class="headerlink" title="二、权限表authorities的说明："></a>二、权限表authorities的说明：</h4><p>权限表为一维数组，元素为权限字段，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'user'</span>, <span class="string">'role'</span>, <span class="string">'report'</span>, <span class="string">'addUser'</span>, <span class="string">'deleteRole'</span>]</span><br></pre></td></tr></table></figure><h4 id="三、权限表authorities的存储："><a href="#三、权限表authorities的存储：" class="headerlink" title="三、权限表authorities的存储："></a>三、权限表authorities的存储：</h4><p>请求self接口获取到权限表都存储到vuex的getters里，方便调用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="comment">// token</span></span><br><span class="line">  token: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.token,</span><br><span class="line">  <span class="comment">// 权限表</span></span><br><span class="line">  authorities: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.authorities,</span><br><span class="line">  <span class="comment">// 用户信息</span></span><br><span class="line">  userInfo: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.userInfo || &#123;&#125;,</span><br><span class="line">  <span class="comment">// 动态路由</span></span><br><span class="line">  addRouters: <span class="function">(<span class="params">&#123; route &#125;</span>) =&gt;</span> route.addRouters</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br></pre></td></tr></table></figure><h4 id="目前调用的地方："><a href="#目前调用的地方：" class="headerlink" title="目前调用的地方："></a>目前调用的地方：</h4><ol><li>自定义指令v-auth；</li><li>动态路由设置里</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;权限表的获取&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
</feed>
