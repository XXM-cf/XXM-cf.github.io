<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cf-Blog</title>
  
  <subtitle>静可谓其道</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-03T08:07:11.710Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>虾莫先生de球鞋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web端常用的导出列表</title>
    <link href="http://yoursite.com/2018/09/03/%E5%AF%BC%E5%87%BA%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2018/09/03/导出列表/</id>
    <published>2018-09-03T08:07:11.287Z</published>
    <updated>2018-09-03T08:07:11.710Z</updated>
    
    <content type="html"><![CDATA[<p>需要后端接口配合，实现导出报表功能<br><a id="more"></a><br>qs模块了解一下啊</p><ul><li>qs.parse()将URL解析成对象的形式</li><li>qs.stringify()将对象 序列化成URL的形式，以&amp;进行拼接</li></ul><p>导出报表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">'pug'</span>&gt;</span></span><br><span class="line">    el-button.hekr-btn(</span><br><span class="line">      type="primary"</span><br><span class="line">      size="small"</span><br><span class="line">      icon="iconfont icon-daochu"</span><br><span class="line">      @click="exportTable"</span><br><span class="line">    ) 导出列表</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"> methods: &#123;</span></span><br><span class="line"><span class="javascript">    exportTable () &#123; <span class="comment">// 导出报表</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> params = &#123;</span></span><br><span class="line"><span class="javascript">        ctrlKey: <span class="keyword">this</span>.$route.query.ctrlKey, <span class="comment">// 安全验证所需要的key，根据接口需要，非必须</span></span></span><br><span class="line"><span class="javascript">        Authorization: <span class="string">`Bearer`</span> + <span class="keyword">this</span>.token.access_token,  <span class="comment">// 传入token做作安全校验</span></span></span><br><span class="line"><span class="javascript">        ...this.searchParams <span class="comment">// 列表筛选的参数</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> queryStr = qs.stringify(params)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> api = <span class="string">'/v1/device/subDevice/export'</span> <span class="comment">// 后端导出API</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> src = <span class="string">`<span class="subst">$&#123;server.fire.url&#125;</span><span class="subst">$&#123;api&#125;</span>?<span class="subst">$&#123;queryStr&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.clickLink(src)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    clickLink (src) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> oA = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>)</span></span><br><span class="line"><span class="undefined">      oA.href = src</span></span><br><span class="line"><span class="undefined">      oA.click()</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"> &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要后端接口配合，实现导出报表功能&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>权限控制之权限的设置</title>
    <link href="http://yoursite.com/2018/08/31/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E4%B9%8B%E6%9D%83%E9%99%90%E7%9A%84%E8%AE%BE%E7%BD%AE(2)/"/>
    <id>http://yoursite.com/2018/08/31/权限控制之权限的设置(2)/</id>
    <published>2018-08-31T09:49:15.101Z</published>
    <updated>2018-08-31T09:46:50.299Z</updated>
    
    <content type="html"><![CDATA[<p>权限设置<br><a id="more"></a></p><h4 id="什么是角色？"><a href="#什么是角色？" class="headerlink" title="什么是角色？"></a>什么是角色？</h4><p>角色就是用户的身份，通常包含其权限信息。</p><h4 id="权限的设置？"><a href="#权限的设置？" class="headerlink" title="权限的设置？"></a>权限的设置？</h4><p>权限的设置就是在角色里设置该角色是否具有某一些权限。</p><h5 id="一、问题："><a href="#一、问题：" class="headerlink" title="一、问题："></a>一、问题：</h5><ol><li>登录账号的权限与其新建角色的可选权限是否一致？自然是一致的</li></ol><h5 id="二、需求："><a href="#二、需求：" class="headerlink" title="二、需求："></a>二、需求：</h5><ol><li>选择角色权限时，可选权限应当为该登录账户下所具有的权限。不具有的权限应不显示。</li></ol><h4 id="权限设置的方案？"><a href="#权限设置的方案？" class="headerlink" title="权限设置的方案？"></a>权限设置的方案？</h4><h5 id="一、思路："><a href="#一、思路：" class="headerlink" title="一、思路："></a>一、思路：</h5><ol><li>前端应具有一个全部权限的数组moduleList；</li><li>根据登录账号的不同匹配moduleList，生成新的数组；</li><li>选择角色采用element-ui的tree组件进行渲染。</li></ol><h5 id="二、默认的全部权限数组"><a href="#二、默认的全部权限数组" class="headerlink" title="二、默认的全部权限数组"></a>二、默认的全部权限数组</h5><p>数据结构参考el-tree组件的结构，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">moduleList: [</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'survey'</span>, <span class="attr">label</span>: <span class="string">'项目概况'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'realTime'</span>, <span class="attr">label</span>: <span class="string">'实时数据'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'curve'</span>,</span><br><span class="line">      label: <span class="string">'曲线分析'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'curveHistory'</span>, <span class="attr">label</span>: <span class="string">'历史曲线'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'curveConsume'</span>, <span class="attr">label</span>: <span class="string">'耗量曲线'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'report'</span>,</span><br><span class="line">      label: <span class="string">'报表分析'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'reportUserPart'</span>, <span class="attr">label</span>: <span class="string">'用户分报'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'reportUser'</span>, <span class="attr">label</span>: <span class="string">'用户报表'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'warning'</span>, <span class="attr">label</span>: <span class="string">'维保管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'push'</span>, <span class="attr">label</span>: <span class="string">'推送管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="string">'project'</span>,</span><br><span class="line">      label: <span class="string">'项目管理'</span>,</span><br><span class="line">      disabled: <span class="literal">false</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">'projectPoint'</span>,</span><br><span class="line">          label: <span class="string">'计量点管理'</span>,</span><br><span class="line">          disabled: <span class="literal">false</span>,</span><br><span class="line">          children: [</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="string">'projectPointDevice'</span>, <span class="attr">label</span>: <span class="string">'设备管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="string">'projectPointPoweroff'</span>, <span class="attr">label</span>: <span class="string">'停电纪录'</span>&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="string">'project_param'</span>, <span class="attr">label</span>: <span class="string">'参数详情'</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>: <span class="string">'user'</span>, <span class="attr">label</span>: <span class="string">'用户管理'</span>, <span class="attr">disabled</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure></p><h5 id="三、vuex中authority-js过滤设置当前登录用户的moduleList"><a href="#三、vuex中authority-js过滤设置当前登录用户的moduleList" class="headerlink" title="三、vuex中authority.js过滤设置当前登录用户的moduleList"></a>三、vuex中authority.js过滤设置当前登录用户的moduleList</h5><p>需要传入用户权限表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defaultData&#125; <span class="keyword">from</span> <span class="string">'@/assets/utils/defaultData'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤权限模块</span></span><br><span class="line"><span class="keyword">const</span> filterModule = <span class="function">(<span class="params">allList, authorities</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> arr = allList.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.children &amp;&amp; item.children.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      item.children = filterModule(item.children, authorities)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (authorities.includes(item.id)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    moduleList: [] <span class="comment">// 权限功能模块</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_MODULELIST: <span class="function">(<span class="params">state, payload</span>) =&gt;</span> &#123;</span><br><span class="line">      state.moduleList = filterModule(defaultData.moduleList, payload)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> route</span><br></pre></td></tr></table></figure><h5 id="四、调用设置modultList的位置"><a href="#四、调用设置modultList的位置" class="headerlink" title="四、调用设置modultList的位置"></a>四、调用设置modultList的位置</h5><p>需要在登录获取到用户信息后调用，传入用户权限表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取登录账户信息</span></span><br><span class="line">GetInfo: <span class="function">(<span class="params">&#123; commit, state &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    getUserInfo().then(<span class="function"><span class="params">rsp</span> =&gt;</span> &#123;</span><br><span class="line">      commit(<span class="string">'SET_USERINFO'</span>, rsp)</span><br><span class="line">      commit(<span class="string">'SET_AUTHORITIES'</span>, authorities)</span><br><span class="line">      commit(<span class="string">'SET_MODULELIST'</span>, state.authorities)</span><br><span class="line">      resolve()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h5 id="五、使用"><a href="#五、使用" class="headerlink" title="五、使用"></a>五、使用</h5><p>只需要在新增编辑角色的代码里，把state.authority.moduleList设置到el-tree就大功告成了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;权限设置&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>基于Vue2.0的后台管理系统之权限控制</title>
    <link href="http://yoursite.com/2018/08/31/%E5%9F%BA%E4%BA%8EVue2.0%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B9%8B%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6(1)/"/>
    <id>http://yoursite.com/2018/08/31/基于Vue2.0的后台管理系统之权限控制(1)/</id>
    <published>2018-08-31T09:47:17.214Z</published>
    <updated>2018-08-31T09:42:23.273Z</updated>
    
    <content type="html"><![CDATA[<p>动态路由、页面级别、按钮级别的权限控制<br><a id="more"></a></p><h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><p>基于Vue2.0的后台管理系统，应用的主要技术有：Vue2.0+，Element-ui，Pug，Scss，Axios，Vuex，VueRouter等。<br><br>因为采用前后端分离的开发模式，有部分权限需要前端进行控制。<br><br>通常涉及的问题有：</p><ol><li>权限表的获取，如何获取？</li><li>权限的控制，如何控制？</li><li>权限的设置，怎么设置？</li></ol><h4 id="方案："><a href="#方案：" class="headerlink" title="方案："></a>方案：</h4><h5 id="一、权限表通过后端接口返回；"><a href="#一、权限表通过后端接口返回；" class="headerlink" title="一、权限表通过后端接口返回；"></a>一、权限表通过后端接口返回；</h5><p><a href="http://note.youdao.com/noteshare?id=6e086832a055a316d4ca5ac1e155827e" target="_blank" rel="noopener">查看关于权限表的详细内容</a></p><h5 id="二、权限通常分为页面级的权限与按钮级的权限"><a href="#二、权限通常分为页面级的权限与按钮级的权限" class="headerlink" title="二、权限通常分为页面级的权限与按钮级的权限"></a>二、权限通常分为页面级的权限与按钮级的权限</h5><ol><li><a href="https://note.youdao.com/web/#/file/recent/markdown/AD5B58CE3286406390B958897D731E9F/" target="_blank" rel="noopener">页面级权限控制方案-动态路由；</a></li><li><a href="https://note.youdao.com/web/#/file/recent/markdown/0D86BC6A04E640A6859D7790AE915A0F/" target="_blank" rel="noopener">按钮级权限控制方案-自定义指令</a><h5 id="三、权限通常通过给用户添加角色实现，角色包含各种权限设置"><a href="#三、权限通常通过给用户添加角色实现，角色包含各种权限设置" class="headerlink" title="三、权限通常通过给用户添加角色实现，角色包含各种权限设置"></a>三、权限通常通过给用户添加角色实现，角色包含各种权限设置</h5><a href="https://note.youdao.com/web/#/file/recent/markdown/0D86BC6A04E640A6859D7790AE915A0F/" target="_blank" rel="noopener">角色权限的设置？</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;动态路由、页面级别、按钮级别的权限控制&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>权限控制之权限表</title>
    <link href="http://yoursite.com/2018/08/31/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E4%B9%8B%E6%9D%83%E9%99%90%E8%A1%A8(1)/"/>
    <id>http://yoursite.com/2018/08/31/权限控制之权限表(1)/</id>
    <published>2018-08-31T09:47:17.213Z</published>
    <updated>2018-08-31T09:43:10.750Z</updated>
    
    <content type="html"><![CDATA[<p>权限表的获取<br><a id="more"></a></p><h4 id="一、权限表authorities的获取："><a href="#一、权限表authorities的获取：" class="headerlink" title="一、权限表authorities的获取："></a>一、权限表authorities的获取：</h4><ol><li>登录（/login接口）后可以获取用户的token；</li><li>请求用户信息接口（/self），获取用户权限表authorities；</li></ol><h4 id="二、权限表authorities的说明："><a href="#二、权限表authorities的说明：" class="headerlink" title="二、权限表authorities的说明："></a>二、权限表authorities的说明：</h4><p>权限表为一维数组，元素为权限字段，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'user'</span>, <span class="string">'role'</span>, <span class="string">'report'</span>, <span class="string">'addUser'</span>, <span class="string">'deleteRole'</span>]</span><br></pre></td></tr></table></figure><h4 id="三、权限表authorities的存储："><a href="#三、权限表authorities的存储：" class="headerlink" title="三、权限表authorities的存储："></a>三、权限表authorities的存储：</h4><p>请求self接口获取到权限表都存储到vuex的getters里，方便调用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="comment">// token</span></span><br><span class="line">  token: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.token,</span><br><span class="line">  <span class="comment">// 权限表</span></span><br><span class="line">  authorities: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.authorities,</span><br><span class="line">  <span class="comment">// 用户信息</span></span><br><span class="line">  userInfo: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.userInfo || &#123;&#125;,</span><br><span class="line">  <span class="comment">// 动态路由</span></span><br><span class="line">  addRouters: <span class="function">(<span class="params">&#123; route &#125;</span>) =&gt;</span> route.addRouters</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br></pre></td></tr></table></figure><h4 id="目前调用的地方："><a href="#目前调用的地方：" class="headerlink" title="目前调用的地方："></a>目前调用的地方：</h4><ol><li>自定义指令v-auth；</li><li>动态路由设置里</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;权限表的获取&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>按钮级权限控制方案-自定义指令v-auth</title>
    <link href="http://yoursite.com/2018/08/31/%E6%8C%89%E9%92%AE%E7%BA%A7%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-auth(1)/"/>
    <id>http://yoursite.com/2018/08/31/按钮级权限控制方案-自定义指令v-auth(1)/</id>
    <published>2018-08-31T09:47:17.210Z</published>
    <updated>2018-08-31T09:44:08.327Z</updated>
    
    <content type="html"><![CDATA[<p>通过自定义指令控制页面里面部分内容的权限<br><a id="more"></a></p><h3 id="为什么采用自定义指令v-auth？"><a href="#为什么采用自定义指令v-auth？" class="headerlink" title="为什么采用自定义指令v-auth？"></a>为什么采用自定义指令v-auth？</h3><h4 id="一、原因："><a href="#一、原因：" class="headerlink" title="一、原因："></a>一、原因：</h4><ol><li>按钮级权限控制通常不仅仅指按钮的显示与否也涵盖某些html内容的隐藏与否</li><li>自定义指令可以绑定到标签元素上，可以有效实现该标签元素与其子元素的显示隐藏</li></ol><h4 id="二、需求："><a href="#二、需求：" class="headerlink" title="二、需求："></a>二、需求：</h4><ol><li>每个权限都需要满足；</li><li>部分权限需要满足</li></ol><h4 id="三、实现代码："><a href="#三、实现代码：" class="headerlink" title="三、实现代码："></a>三、实现代码：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'@/store'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* v-auth 自定义权限按钮指令</span></span><br><span class="line"><span class="comment">* v-auth:every 每个权限都需要满足</span></span><br><span class="line"><span class="comment">* v-auth:some 部分权限需要满足</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> auth = <span class="function">(<span class="params">el, binding</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> valueArr = binding.value</span><br><span class="line">  <span class="keyword">let</span> authorities = store.getters.authorities</span><br><span class="line">  <span class="keyword">let</span> rules = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">let</span> arg = binding.arg || <span class="string">'every'</span></span><br><span class="line">  <span class="keyword">if</span> (arg === <span class="string">'every'</span>) &#123;</span><br><span class="line">    rules = valueArr.every(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> authorities.includes(item)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arg === <span class="string">'some'</span>) &#123;</span><br><span class="line">    rules = valueArr.some(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> authorities.includes(item)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  !rules &amp;&amp; el.parentNode.removeChild(el)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> auth</span><br></pre></td></tr></table></figure><h4 id="四、自定义指令v-auth的引入："><a href="#四、自定义指令v-auth的引入：" class="headerlink" title="四、自定义指令v-auth的引入："></a>四、自定义指令v-auth的引入：</h4><h5 id="1、directive目录下index-js引入auth-js，并设置自定义指令"><a href="#1、directive目录下index-js引入auth-js，并设置自定义指令" class="headerlink" title="1、directive目录下index.js引入auth.js，并设置自定义指令"></a>1、directive目录下index.js引入auth.js，并设置自定义指令</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> auth <span class="keyword">from</span> <span class="string">'./auth'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (Vue) =&gt; &#123;</span><br><span class="line">  Vue.directive(<span class="string">'auth'</span>, &#123;</span><br><span class="line">    inserted: auth</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、main-js里引入自定义指令"><a href="#2、main-js里引入自定义指令" class="headerlink" title="2、main.js里引入自定义指令"></a>2、main.js里引入自定义指令</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Directive <span class="keyword">from</span> <span class="string">'./directive'</span></span><br><span class="line">Vue.use(Directive)</span><br></pre></td></tr></table></figure><h4 id="五、自定义指令v-auth的使用："><a href="#五、自定义指令v-auth的使用：" class="headerlink" title="五、自定义指令v-auth的使用："></a>五、自定义指令v-auth的使用：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">el-button(v-auth=&quot;[&apos;user&apos;]&quot;) 普通用法显示</span><br><span class="line">el-button(v-auth:every=&quot;[&apos;user&apos;, &apos;role&apos;]&quot;) 每个权限都满足显示</span><br><span class="line">el-button(v-auth:some=&quot;[&apos;user&apos;, &apos;role&apos;]&quot;) 部分权限满足显示</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过自定义指令控制页面里面部分内容的权限&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>页面级权限控制方案-动态路由</title>
    <link href="http://yoursite.com/2018/08/31/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1(1)/"/>
    <id>http://yoursite.com/2018/08/31/页面级权限控制方案-动态路由(1)/</id>
    <published>2018-08-31T09:47:17.205Z</published>
    <updated>2018-08-31T09:46:04.663Z</updated>
    
    <content type="html"><![CDATA[<p>通过动态路由控制页面级权限，不同权限的用户访问路由不一样<br><a id="more"></a></p><h3 id="什么是动态路由？"><a href="#什么是动态路由？" class="headerlink" title="什么是动态路由？"></a>什么是动态路由？</h3><p>即是根据用户的权限不同，动态生成路由规则的可访问路由。</p><h3 id="为什么要使用动态路由？"><a href="#为什么要使用动态路由？" class="headerlink" title="为什么要使用动态路由？"></a>为什么要使用动态路由？</h3><h4 id="一、原因："><a href="#一、原因：" class="headerlink" title="一、原因："></a>一、原因：</h4><ol><li>后台管理系统通常都有多种角色存在，每种角色都有不同的权限；</li><li>根据用户的权限不同，动态生成路由规则，可以让每个用户看到不同的导航菜单。</li></ol><h4 id="二、需求："><a href="#二、需求：" class="headerlink" title="二、需求："></a>二、需求：</h4><ol><li>用户权限不同，看到的导航菜单也不同；</li><li>用户直接输入url路径试图访问没有权限或不存在的页面将会跳转到404页面；</li></ol><h4 id="三、主要利用到的技术"><a href="#三、主要利用到的技术" class="headerlink" title="三、主要利用到的技术"></a>三、主要利用到的技术</h4><p>router.addRoutes，可动态添加路由规则</p><h3 id="动态路由的实现？"><a href="#动态路由的实现？" class="headerlink" title="动态路由的实现？"></a>动态路由的实现？</h3><h4 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h4><ol><li>路由文件包含全部路由（分为公共基础路由publicRouter与导航路由navRouter）、并有权限字段设置；</li><li>登录获取到权限表authorities，根据权限表与路由权限字段authority匹配，匹配的路由处理为新路由规则addRouters；</li><li>新的路由规则添加到router中；</li><li>根据新的路由规则渲染导航菜单。</li></ol><h4 id="二、路由文件router-js的设置"><a href="#二、路由文件router-js的设置" class="headerlink" title="二、路由文件router.js的设置"></a>二、路由文件router.js的设置</h4><ol><li>路由文件分割为公共基础路由publicRouter跟导航路由navRoute <br><br>publicRouter为基础路由，与权限无关，每个用户都含有。通常包括：根路径（/）设置、home路由与登录路由。<br><br>navRouter为动态导航路由，包含全部与权限控制相关的路由，显示在导航菜单栏。<br><br>注：404路由虽然为公共路由，但需要放到路由规则的最后面。</li><li>具体代码如下</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'@/views/home/index.vue'</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'@/views/login/index.vue'</span></span><br><span class="line"><span class="keyword">import</span> Error404 <span class="keyword">from</span> <span class="string">'@/views/error/404'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 布局页面</span></span><br><span class="line"><span class="keyword">import</span> Layout <span class="keyword">from</span> <span class="string">'@/components/layout/index.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欢迎页</span></span><br><span class="line"><span class="keyword">const</span> Welcome = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/welcome/welcome.vue'</span>)</span><br><span class="line"><span class="comment">// demo</span></span><br><span class="line"><span class="keyword">const</span> DemoCard = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/demo/card.vue'</span>)</span><br><span class="line"><span class="comment">// 运营总览</span></span><br><span class="line"><span class="keyword">const</span> Survey = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/survey/survey.vue'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公共基础路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> publicRouter = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    redirect: <span class="string">'/home'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/home'</span>,</span><br><span class="line">    name: <span class="string">'Home'</span>,</span><br><span class="line">    component: Home</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/login'</span>,</span><br><span class="line">    name: <span class="string">'login'</span>,</span><br><span class="line">    component: Login</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  auth: <span class="literal">true</span>,</span><br><span class="line">  routes: publicRouter</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 动态nav路由, 显示在菜单栏</span></span><br><span class="line"><span class="comment">* icon: 路由icon图标</span></span><br><span class="line"><span class="comment">* authority: 访问路由所需权限, Array</span></span><br><span class="line"><span class="comment">* keepAlivePath: 菜单栏高亮路由</span></span><br><span class="line"><span class="comment">* hide: 是否隐藏子路由</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> navRouter = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/welcome'</span>,</span><br><span class="line">    redirect: <span class="string">'/welcome'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      icon: <span class="string">'iconfont icon-zhuye'</span></span><br><span class="line">      <span class="comment">// authority: [''],</span></span><br><span class="line">      <span class="comment">// keepAlivePath: '/welcome'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        name: <span class="string">'Welcome'</span>,</span><br><span class="line">        component: Welcome,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          title: <span class="string">'欢迎'</span></span><br><span class="line">          <span class="comment">// hide: false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/demo'</span>,</span><br><span class="line">    redirect: <span class="string">'/demo/card'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      title: <span class="string">'组件'</span>,</span><br><span class="line">      icon: <span class="string">'iconfont icon-shebeidilifenbu'</span>,</span><br><span class="line">      children: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'card'</span>,</span><br><span class="line">        name: <span class="string">'DemoCard'</span>,</span><br><span class="line">        component: DemoCard,</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'卡片组件'</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/survey'</span>,</span><br><span class="line">    redirect: <span class="string">'/survey'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      icon: <span class="string">'iconfont icon-baobiaotongji'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        name: <span class="string">'Survey'</span>,</span><br><span class="line">        component: Survey,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          title: <span class="string">'运营总览'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'*'</span>,</span><br><span class="line">    redirect: <span class="string">'/404'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      icon: <span class="string">''</span>,</span><br><span class="line">      hide: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        name: <span class="string">'Error404'</span>,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          title: <span class="string">'404页面'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        component: Error404</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="三、vuex管理的路由模块route-js的设置"><a href="#三、vuex管理的路由模块route-js的设置" class="headerlink" title="三、vuex管理的路由模块route.js的设置"></a>三、vuex管理的路由模块route.js的设置</h4><ol><li>route.js是匹配路由规则，生成动态路由的文件。<br><br>生成的全部路由将会被addRoutes到router中，并会在导航菜单渲染中使用</li><li>具体代码如下</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; navRouter, publicRouter &#125; <span class="keyword">from</span> <span class="string">'@/router/index'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否有权限</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasPermission</span> (<span class="params">roles, route</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (route.meta &amp;&amp; route.meta.authority) &#123;</span><br><span class="line">    <span class="keyword">return</span> roles.some(<span class="function"><span class="params">role</span> =&gt;</span> route.meta.authority.includes(role))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤路由</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filterAsyncRouter</span> (<span class="params">navRouter, roles</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> accessedRouters = navRouter.filter(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (hasPermission(roles, route)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (route.children &amp;&amp; route.children.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        route.children = filterAsyncRouter(route.children, roles)</span><br><span class="line">        <span class="keyword">if</span> (route.redirect &amp;&amp; route.children[<span class="number">0</span>].path) &#123;</span><br><span class="line">          route.redirect = route.path + <span class="string">'/'</span> + route.children[<span class="number">0</span>].path</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> accessedRouters</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    addRouters: [], <span class="comment">// 动态路由</span></span><br><span class="line">    routers: [] <span class="comment">// 全部路由</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_ROUTERS: <span class="function">(<span class="params">state, routers</span>) =&gt;</span> &#123;</span><br><span class="line">      state.addRouters = routers</span><br><span class="line">      state.routers = publicRouter.concat(routers)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    GenerateRoutes: <span class="function">(<span class="params">&#123; commit &#125;, &#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> accessedRouters = filterAsyncRouter(navRouter, data)</span><br><span class="line">        commit(<span class="string">'SET_ROUTERS'</span>, accessedRouters)</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> route</span><br></pre></td></tr></table></figure><p>3、为了方便调用，也是放到vuex的getters中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="comment">// token</span></span><br><span class="line">  token: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.token,</span><br><span class="line">  <span class="comment">// 权限表</span></span><br><span class="line">  authorities: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.authorities,</span><br><span class="line">  <span class="comment">// 用户信息</span></span><br><span class="line">  userInfo: <span class="function">(<span class="params">&#123; user &#125;</span>) =&gt;</span> user.userInfo || &#123;&#125;,</span><br><span class="line">  <span class="comment">// 动态路由</span></span><br><span class="line">  addRouters: <span class="function">(<span class="params">&#123; route &#125;</span>) =&gt;</span> route.addRouters</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br></pre></td></tr></table></figure><h4 id="四、全局路由拦截permission-js的设置"><a href="#四、全局路由拦截permission-js的设置" class="headerlink" title="四、全局路由拦截permission.js的设置"></a>四、全局路由拦截permission.js的设置</h4><ol><li>该拦截可实现登录后与强制刷新浏览器都会重新获取self接口，重新设置动态路由。<br><br>在此处，需要把匹配好的动态路由通过addRouters添加到router中。</li><li>具体代码如下</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'@/router/index'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'@/store'</span></span><br><span class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">'nprogress'</span> <span class="comment">// Progress 进度条</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'nprogress/nprogress.css'</span><span class="comment">// Progress 进度条样式</span></span><br><span class="line"><span class="keyword">import</span> &#123; Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> &#123; getToken, removeToken &#125; <span class="keyword">from</span> <span class="string">'@/assets/utils/auth'</span> <span class="comment">// 验权</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">'/login'</span>] <span class="comment">// 不重定向白名单</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  NProgress.start()</span><br><span class="line">  <span class="keyword">let</span> remember = <span class="built_in">JSON</span>.parse(getToken(<span class="literal">true</span>))</span><br><span class="line">  <span class="keyword">let</span> token = getToken(<span class="literal">false</span>, remember)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) &#123;</span><br><span class="line">      next(&#123; <span class="attr">path</span>: <span class="string">'/'</span> &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (store &amp;&amp; store.getters.addRouters.length === <span class="number">0</span>) &#123;</span><br><span class="line">        store.dispatch(<span class="string">'GetInfo'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123; <span class="comment">// 拉取用户信息</span></span><br><span class="line">          <span class="keyword">let</span> data = store.getters.authorities</span><br><span class="line">          store.dispatch(<span class="string">'GenerateRoutes'</span>, &#123; data &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 根据roles权限生成可访问的路由表</span></span><br><span class="line">            router.addRoutes(store.getters.addRouters) <span class="comment">// 动态添加可访问路由表</span></span><br><span class="line">            <span class="keyword">if</span> (data &amp;&amp; data.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              next(&#123; ...to, <span class="attr">replace</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              Message.error(<span class="string">'账号异常'</span>)</span><br><span class="line">              removeToken()</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          store.dispatch(<span class="string">'LogOut'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next()</span><br><span class="line">        NProgress.done()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whiteList.indexOf(to.path) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      next(<span class="string">'/login'</span>)</span><br><span class="line">      NProgress.done()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  NProgress.done() <span class="comment">// 结束Progress</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="五、home页的设置"><a href="#五、home页的设置" class="headerlink" title="五、home页的设置"></a>五、home页的设置</h4><p>目的：</p><ol><li>home页作为登录后的loading页；</li><li>根路径会默认重定向到该页面；</li><li>进入到home页后，会跳转到动态路由的第一个路由页面。<br>具体代码如下：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">"pug"</span>&gt;</span></span><br><span class="line">  .home-page</span><br><span class="line">    i.el-icon-loading</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'Home'</span>,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="javascript">    ...mapState([<span class="string">'route'</span>])</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  mounted () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> toRouter = <span class="keyword">this</span>.route.addRouters[<span class="number">0</span>].path</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.$router.push(toRouter)</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.home-page</span>&#123;</span></span><br><span class="line"><span class="undefined">  width: 100%;</span></span><br><span class="line"><span class="undefined">  height: 100%;</span></span><br><span class="line"><span class="undefined">  display: flex;</span></span><br><span class="line"><span class="undefined">  justify-content: center;</span></span><br><span class="line"><span class="undefined">  align-items: center;</span></span><br><span class="line"><span class="undefined">  font-size: 80px;</span></span><br><span class="line"><span class="undefined">  color: $success;</span></span><br><span class="line"><span class="undefined">  background: url('~@/assets/images/login-bg.png') no-repeat center center / cover;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="六、导航菜单的设置："><a href="#六、导航菜单的设置：" class="headerlink" title="六、导航菜单的设置："></a>六、导航菜单的设置：</h4><ol><li>导航菜单利用element-ui的el-menu组件实现；<br><br>主要需要考虑的是菜单栏的高亮问题，强制刷新浏览器，登录后第一次进入，切花页面。高亮状态的保持与更替需要有仔细的考虑与验证。</li><li>具体代码如下：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">"pug"</span>&gt;</span></span><br><span class="line">  .app-nav</span><br><span class="line">    el-menu(ref="navMenu",:default-active="activeIndex", mode="horizontal", @open="handleOpen", @close="handleClose",</span><br><span class="line">      @select="selectHandle", :unique-opened="true", :collapse-transition="false")</span><br><span class="line">      template(v-for="item in list", v-if="item.show")</span><br><span class="line">        el-menu-item(v-if="!item.children", :index="item.path")</span><br><span class="line">          i(:class="item.icon")</span><br><span class="line">          span(slot="title") &#123;&#123;item.title&#125;&#125;</span><br><span class="line">        el-submenu(v-else, :index="item.path", :popper-append-to-body="false", ref="submenu", popper-class="hekr-submenu",</span><br><span class="line">          :hide-timeout="0", :show-timeout="0")</span><br><span class="line">          template(slot="title")</span><br><span class="line">            i(:class="item.icon")</span><br><span class="line">            span(slot="title") &#123;&#123;item.title&#125;&#125;</span><br><span class="line">          template(v-for="sub in item.subList")</span><br><span class="line">            el-menu-item(:index="sub.path", v-show="sub.show")</span><br><span class="line">              i(:class="sub.icon")</span><br><span class="line">              span &#123;&#123;sub.title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'AppNav'</span>,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      activeIndex: <span class="keyword">this</span>.defaultActiveIndex</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="javascript">    ...mapState([<span class="string">'user'</span>, <span class="string">'route'</span>]),</span></span><br><span class="line"><span class="undefined">    defaultActiveIndex () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">this</span>.$route.meta.keepAlivePath ? <span class="keyword">this</span>.$route.meta.keepAlivePath : <span class="keyword">this</span>.$route.path</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    list () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> router = <span class="keyword">this</span>.route.addRouters</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> router.map(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> path = r.redirect</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> icon = r.meta.icon</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> title = r.meta.title || r.children[<span class="number">0</span>].meta.title</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> children = r.meta.children</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> subList = []</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> show = !r.meta.hide</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (children) &#123;</span></span><br><span class="line"><span class="javascript">          r.children.map(<span class="function"><span class="params">s</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="undefined">            subList.push(&#123;</span></span><br><span class="line"><span class="javascript">              path: <span class="string">`<span class="subst">$&#123;r.path&#125;</span>/<span class="subst">$&#123;s.path&#125;</span>`</span>,</span></span><br><span class="line"><span class="undefined">              icon: s.meta.icon,</span></span><br><span class="line"><span class="undefined">              title: s.meta.title,</span></span><br><span class="line"><span class="undefined">              show: !s.meta.hide</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;path, icon, title, children, show, subList &#125;</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  mounted () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.activeIndex = <span class="keyword">this</span>.defaultActiveIndex</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  watch: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="string">'$route'</span> (to, <span class="keyword">from</span>) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.activeIndex = <span class="keyword">this</span>.defaultActiveIndex</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    handleOpen (index, path) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.push(index)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$refs.navMenu.activeIndex = index</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.closeSubmenu(index)</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    handleClose (index, path) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.closeSubmenu(index)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    selectHandle (index, path) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (index !== <span class="keyword">this</span>.$route.path) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$router.push(index)</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.closeSubmenu(index)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 关闭子菜单</span></span></span><br><span class="line"><span class="undefined">    closeSubmenu (index) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$refs.navMenu.close(index)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过动态路由控制页面级权限，不同权限的用户访问路由不一样&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>rem.js</title>
    <link href="http://yoursite.com/2018/05/31/rem.js/"/>
    <id>http://yoursite.com/2018/05/31/rem.js/</id>
    <published>2018-05-31T02:20:34.093Z</published>
    <updated>2018-05-31T02:19:55.350Z</updated>
    
    <content type="html"><![CDATA[<p> rem单位在各种屏幕上的适配代码<br> <a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * rem单位在各种屏幕上的适配代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="comment">// width用来设置设计稿原型的屏幕宽度（这里是以 Iphone 6为原型的设计稿）</span></span><br><span class="line">  <span class="keyword">const</span> width = <span class="number">375</span></span><br><span class="line">  <span class="comment">// 注册 resize事件</span></span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, setFontSize, <span class="literal">false</span>)</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setFontSize</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> clientWidth = <span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line">    <span class="comment">// 这里是设置屏幕的最大和最小值时候给一个默认值</span></span><br><span class="line">    <span class="keyword">if</span> (clientWidth &gt; <span class="number">720</span>) clientWidth = <span class="number">720</span></span><br><span class="line">    <span class="keyword">if</span> (clientWidth &lt; <span class="number">320</span>) clientWidth = <span class="number">320</span></span><br><span class="line">    <span class="comment">// 设置 rem 大小</span></span><br><span class="line">    <span class="built_in">document</span>.documentElement.style.fontSize = <span class="string">`<span class="subst">$&#123;clientWidth <span class="regexp">/ width * 20&#125;px`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">  &#125;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">  setFontSize()</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">&#125;</span></span></span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; rem单位在各种屏幕上的适配代码&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js比较版本号大小</title>
    <link href="http://yoursite.com/2018/05/31/js%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7%E5%A4%A7%E5%B0%8F/"/>
    <id>http://yoursite.com/2018/05/31/js比较版本号大小/</id>
    <published>2018-05-31T02:20:16.400Z</published>
    <updated>2018-05-18T03:15:32.819Z</updated>
    
    <content type="html"><![CDATA[<p>由于版本号是两个小数点不能直接比较，直接比较会出错（偶尔不对）。<br><a id="more"></a><br>所以就把前两位 转为浮点数比较，在相等的情况下比较后面一位。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> versionfunegt = <span class="function"><span class="keyword">function</span> (<span class="params">ver1, ver2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> version1pre = <span class="built_in">parseFloat</span>(ver1)</span><br><span class="line">  <span class="keyword">var</span> version2pre = <span class="built_in">parseFloat</span>(ver2)</span><br><span class="line">  <span class="keyword">var</span> version1next = ver1.replace(version1pre + <span class="string">'.'</span>, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">var</span> version2next = ver2.replace(version2pre + <span class="string">'.'</span>, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">if</span> (version1pre &gt; version2pre) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (version1pre &lt; version2pre) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (version1next &gt;= version2next) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于版本号是两个小数点不能直接比较，直接比较会出错（偶尔不对）。&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>解决安卓返回键路由切换异常的问题</title>
    <link href="http://yoursite.com/2018/04/27/%E8%A7%A3%E5%86%B3%E5%AE%89%E5%8D%93%E8%BF%94%E5%9B%9E%E9%94%AE%20%E8%B7%AF%E7%94%B1%E5%88%87%E6%8D%A2%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/04/27/解决安卓返回键 路由切换异常的问题/</id>
    <published>2018-04-27T08:57:01.143Z</published>
    <updated>2018-04-27T08:59:19.620Z</updated>
    
    <content type="html"><![CDATA[<p>使用$router.push()跳转路由.安装返回键返回路径问题<br><a id="more"></a></p><p>使用$router.push()跳转路由，在安卓返回键中不能正常返回，可以自定义返回路径，按如下操作：</p><h3 id="state中定义两个状态"><a href="#state中定义两个状态" class="headerlink" title="state中定义两个状态"></a>state中定义两个状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">currentRouterName: &apos;&apos;, // 存放当前页面的路由</span><br><span class="line">routerHistory: &#123; // 存放路由跳转规则，键为当前页面路由名称，值为返回时要回到的页面路径</span><br><span class="line">timing: &apos;/&apos;,</span><br><span class="line">timing_weekday: &apos;/timing&apos;,</span><br><span class="line">timing_weekend: &apos;/timing&apos;,</span><br><span class="line">timing_settingWeekday: &apos;/timing-weekday&apos;,</span><br><span class="line">timing_settingWeekend: &apos;/timing-weekend&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mutations-js中更改状态"><a href="#mutations-js中更改状态" class="headerlink" title="mutations.js中更改状态"></a>mutations.js中更改状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export const getRouter = (state, routerName) =&gt; &#123;</span><br><span class="line">  state.currentRouterName = routerName</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="App-vue-中设置路径"><a href="#App-vue-中设置路径" class="headerlink" title="App.vue 中设置路径"></a>App.vue 中设置路径</h3><p>如果页面中存在弹出层，返回键按下的时候应先关闭弹层,使用v-back指令，应添加v-if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hk-pop(</span><br><span class="line">    v-model=&quot;settingPop&quot;</span><br><span class="line">    v-if=&quot;settingPop&quot;</span><br><span class="line">    v-back=&quot;settingPop&quot;</span><br><span class="line">    class=&quot;setting-pop&quot;</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>将app.vue作如下修改<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">...mapState([</span><br><span class="line">  <span class="string">'routerHistory'</span>,</span><br><span class="line">  <span class="string">'currentRouterName'</span></span><br><span class="line">])</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 安卓返回键点击</span></span><br><span class="line"><span class="keyword">this</span>.$hekr.on(<span class="string">'back'</span>, () =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.$back.length)</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.$back.length) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.$back.pop()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.$route.name === <span class="string">'home'</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.$hekr.close()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.$router.push(<span class="keyword">this</span>.routerHistory[<span class="keyword">this</span>.currentRouterName])</span><br><span class="line"><span class="comment">// this.$router.back()</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="页面挂载的时候，更改状态，获取当前页面的路由name"><a href="#页面挂载的时候，更改状态，获取当前页面的路由name" class="headerlink" title="页面挂载的时候，更改状态，获取当前页面的路由name"></a>页面挂载的时候，更改状态，获取当前页面的路由name</h3><p>可以直接传入当前页面的路由name，需要和state中的routerHistory对象的键对应，<br>也可以用 this.$router.history.current.name 获取路由名称，但是state中键值名称不能包括中划线，如果路由名称中存在中划线，需作一定转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> this.getRouter(&apos;timing_weekday&apos;) </span><br><span class="line">// this.getRouter(this.$router.history.current.name)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用$router.push()跳转路由.安装返回键返回路径问题&lt;br&gt;
    
    </summary>
    
    
      <category term="工作" scheme="http://yoursite.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>截流函数</title>
    <link href="http://yoursite.com/2018/04/27/%E6%88%AA%E6%B5%81%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2018/04/27/截流函数/</id>
    <published>2018-04-27T08:56:46.921Z</published>
    <updated>2018-04-27T09:00:02.959Z</updated>
    
    <content type="html"><![CDATA[<p>避免多次触发<br><a id="more"></a></p><h3 id="什么是节流函数"><a href="#什么是节流函数" class="headerlink" title="什么是节流函数"></a>什么是节流函数</h3><p>简单讲就是让一个函数无法在短时间内连续调用，只有当上一次函数执行后过了规定的时间间隔，才能进行下一次该函数的调用。或者说你在操作的时候不会马上执行该函数，而是等你不操作的时候才会执行。</p><h3 id="原生封装"><a href="#原生封装" class="headerlink" title="原生封装"></a>原生封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function thorttleFn(callBack,delay,intervalTime)&#123;</span><br><span class="line">    var timer=null;  // 定时器变量</span><br><span class="line">    var time=0;  // 时间变量</span><br><span class="line">    return function()&#123;</span><br><span class="line">        var context=this;</span><br><span class="line">        var curTime=new Date();  // 当前执行的时间</span><br><span class="line">        clearTimeout(timer);  //  清除上次的定时器</span><br><span class="line">        </span><br><span class="line">        if(!time)&#123;</span><br><span class="line">            time=curTime;</span><br><span class="line">        &#125;</span><br><span class="line">        // 当前执行时间距离上次执行的时间是否大于等于间隔时间</span><br><span class="line">        if(curTime - time &gt;= intervalTime)&#123;</span><br><span class="line">            time=curTime;</span><br><span class="line">            callBack.apply(context,arguments)</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            timer=setTimeout(()=&gt;&#123;</span><br><span class="line">                callBack.apply(context,arguments)</span><br><span class="line">            &#125;,delay)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//调用</span><br><span class="line">window.onresize=thorttleFn(myFunc,50,300)</span><br></pre></td></tr></table></figure><h3 id="调用lodash"><a href="#调用lodash" class="headerlink" title="调用lodash"></a>调用lodash</h3><p><a href="http://www.css88.com/doc/lodash/#_debouncefunc-wait0-options" target="_blank" rel="noopener">debounce函数详解</a></p><p>vue项目中使用如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install lodash --save // 安装 lodash</span><br><span class="line">import debounce  from&apos;lodash/debounce&apos;  // 引入debounce</span><br><span class="line"></span><br><span class="line">delayGetSpeed: debounce( // 节流 </span><br><span class="line">  function (val) &#123; // 回掉函数</span><br><span class="line">    console.log(&apos;Do somthing here&apos;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, 1000),</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;避免多次触发&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Eslint 校验规则及配置</title>
    <link href="http://yoursite.com/2018/04/27/Eslint%E6%A0%A1%E9%AA%8C/"/>
    <id>http://yoursite.com/2018/04/27/Eslint校验/</id>
    <published>2018-04-27T08:56:41.115Z</published>
    <updated>2018-03-24T11:07:20.948Z</updated>
    
    <content type="html"><![CDATA[<p>记录常用的Eslint检验配置<br><a id="more"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rules: &#123;</span><br><span class="line">    <span class="string">"规则名"</span>: [规则值, 规则配置]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;off&quot;或者0    //关闭规则关闭  </span><br><span class="line">&quot;warn&quot;或者1      //在打开的规则作为警告（不影响退出代码）  </span><br><span class="line">&quot;error&quot;或者2    //把规则作为一个错误（退出代码触发时为1）</span><br></pre></td></tr></table></figure><p>校验规则 来自网络</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"no-alert"</span>: <span class="number">0</span>,<span class="comment">//禁止使用alert confirm prompt</span></span><br><span class="line"><span class="string">"no-array-constructor"</span>: <span class="number">2</span>,<span class="comment">//禁止使用数组构造器</span></span><br><span class="line"><span class="string">"no-bitwise"</span>: <span class="number">0</span>,<span class="comment">//禁止使用按位运算符</span></span><br><span class="line"><span class="string">"no-caller"</span>: <span class="number">1</span>,<span class="comment">//禁止使用arguments.caller或arguments.callee</span></span><br><span class="line"><span class="string">"no-catch-shadow"</span>: <span class="number">2</span>,<span class="comment">//禁止catch子句参数与外部作用域变量同名</span></span><br><span class="line"><span class="string">"no-class-assign"</span>: <span class="number">2</span>,<span class="comment">//禁止给类赋值</span></span><br><span class="line"><span class="string">"no-cond-assign"</span>: <span class="number">2</span>,<span class="comment">//禁止在条件表达式中使用赋值语句</span></span><br><span class="line"><span class="string">"no-console"</span>: <span class="number">2</span>,<span class="comment">//禁止使用console</span></span><br><span class="line"><span class="string">"no-const-assign"</span>: <span class="number">2</span>,<span class="comment">//禁止修改const声明的变量</span></span><br><span class="line"><span class="string">"no-constant-condition"</span>: <span class="number">2</span>,<span class="comment">//禁止在条件中使用常量表达式 if(true) if(1)</span></span><br><span class="line"><span class="string">"no-continue"</span>: <span class="number">0</span>,<span class="comment">//禁止使用continue</span></span><br><span class="line"><span class="string">"no-control-regex"</span>: <span class="number">2</span>,<span class="comment">//禁止在正则表达式中使用控制字符</span></span><br><span class="line"><span class="string">"no-debugger"</span>: <span class="number">2</span>,<span class="comment">//禁止使用debugger</span></span><br><span class="line"><span class="string">"no-delete-var"</span>: <span class="number">2</span>,<span class="comment">//不能对var声明的变量使用delete操作符</span></span><br><span class="line"><span class="string">"no-div-regex"</span>: <span class="number">1</span>,<span class="comment">//不能使用看起来像除法的正则表达式/=foo/</span></span><br><span class="line"><span class="string">"no-dupe-keys"</span>: <span class="number">2</span>,<span class="comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span></span><br><span class="line"><span class="string">"no-dupe-args"</span>: <span class="number">2</span>,<span class="comment">//函数参数不能重复</span></span><br><span class="line"><span class="string">"no-duplicate-case"</span>: <span class="number">2</span>,<span class="comment">//switch中的case标签不能重复</span></span><br><span class="line"><span class="string">"no-else-return"</span>: <span class="number">2</span>,<span class="comment">//如果if语句里面有return,后面不能跟else语句</span></span><br><span class="line"><span class="string">"no-empty"</span>: <span class="number">2</span>,<span class="comment">//块语句中的内容不能为空</span></span><br><span class="line"><span class="string">"no-empty-character-class"</span>: <span class="number">2</span>,<span class="comment">//正则表达式中的[]内容不能为空</span></span><br><span class="line"><span class="string">"no-empty-label"</span>: <span class="number">2</span>,<span class="comment">//禁止使用空label</span></span><br><span class="line"><span class="string">"no-eq-null"</span>: <span class="number">2</span>,<span class="comment">//禁止对null使用==或!=运算符</span></span><br><span class="line"><span class="string">"no-eval"</span>: <span class="number">1</span>,<span class="comment">//禁止使用eval</span></span><br><span class="line"><span class="string">"no-ex-assign"</span>: <span class="number">2</span>,<span class="comment">//禁止给catch语句中的异常参数赋值</span></span><br><span class="line"><span class="string">"no-extend-native"</span>: <span class="number">2</span>,<span class="comment">//禁止扩展native对象</span></span><br><span class="line"><span class="string">"no-extra-bind"</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的函数绑定</span></span><br><span class="line"><span class="string">"no-extra-boolean-cast"</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的bool转换</span></span><br><span class="line"><span class="string">"no-extra-parens"</span>: <span class="number">2</span>,<span class="comment">//禁止非必要的括号</span></span><br><span class="line"><span class="string">"no-extra-semi"</span>: <span class="number">2</span>,<span class="comment">//禁止多余的冒号</span></span><br><span class="line"><span class="string">"no-fallthrough"</span>: <span class="number">1</span>,<span class="comment">//禁止switch穿透</span></span><br><span class="line"><span class="string">"no-floating-decimal"</span>: <span class="number">2</span>,<span class="comment">//禁止省略浮点数中的0 .5 3.</span></span><br><span class="line"><span class="string">"no-func-assign"</span>: <span class="number">2</span>,<span class="comment">//禁止重复的函数声明</span></span><br><span class="line"><span class="string">"no-implicit-coercion"</span>: <span class="number">1</span>,<span class="comment">//禁止隐式转换</span></span><br><span class="line"><span class="string">"no-implied-eval"</span>: <span class="number">2</span>,<span class="comment">//禁止使用隐式eval</span></span><br><span class="line"><span class="string">"no-inline-comments"</span>: <span class="number">0</span>,<span class="comment">//禁止行内备注</span></span><br><span class="line"><span class="string">"no-inner-declarations"</span>: [<span class="number">2</span>, <span class="string">"functions"</span>],<span class="comment">//禁止在块语句中使用声明（变量或函数）</span></span><br><span class="line"><span class="string">"no-invalid-regexp"</span>: <span class="number">2</span>,<span class="comment">//禁止无效的正则表达式</span></span><br><span class="line"><span class="string">"no-invalid-this"</span>: <span class="number">2</span>,<span class="comment">//禁止无效的this，只能用在构造器，类，对象字面量</span></span><br><span class="line"><span class="string">"no-irregular-whitespace"</span>: <span class="number">2</span>,<span class="comment">//不能有不规则的空格</span></span><br><span class="line"><span class="string">"no-iterator"</span>: <span class="number">2</span>,<span class="comment">//禁止使用__iterator__ 属性</span></span><br><span class="line"><span class="string">"no-label-var"</span>: <span class="number">2</span>,<span class="comment">//label名不能与var声明的变量名相同</span></span><br><span class="line"><span class="string">"no-labels"</span>: <span class="number">2</span>,<span class="comment">//禁止标签声明</span></span><br><span class="line"><span class="string">"no-lone-blocks"</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的嵌套块</span></span><br><span class="line"><span class="string">"no-lonely-if"</span>: <span class="number">2</span>,<span class="comment">//禁止else语句内只有if语句</span></span><br><span class="line"><span class="string">"no-loop-func"</span>: <span class="number">1</span>,<span class="comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span><br><span class="line"><span class="string">"no-mixed-requires"</span>: [<span class="number">0</span>, <span class="literal">false</span>],<span class="comment">//声明时不能混用声明类型</span></span><br><span class="line"><span class="string">"no-mixed-spaces-and-tabs"</span>: [<span class="number">2</span>, <span class="literal">false</span>],<span class="comment">//禁止混用tab和空格</span></span><br><span class="line"><span class="string">"linebreak-style"</span>: [<span class="number">0</span>, <span class="string">"windows"</span>],<span class="comment">//换行风格</span></span><br><span class="line"><span class="string">"no-multi-spaces"</span>: <span class="number">1</span>,<span class="comment">//不能用多余的空格</span></span><br><span class="line"><span class="string">"no-multi-str"</span>: <span class="number">2</span>,<span class="comment">//字符串不能用\换行</span></span><br><span class="line"><span class="string">"no-multiple-empty-lines"</span>: [<span class="number">1</span>, &#123;<span class="string">"max"</span>: <span class="number">2</span>&#125;],<span class="comment">//空行最多不能超过2行</span></span><br><span class="line"><span class="string">"no-native-reassign"</span>: <span class="number">2</span>,<span class="comment">//不能重写native对象</span></span><br><span class="line"><span class="string">"no-negated-in-lhs"</span>: <span class="number">2</span>,<span class="comment">//in 操作符的左边不能有!</span></span><br><span class="line"><span class="string">"no-nested-ternary"</span>: <span class="number">0</span>,<span class="comment">//禁止使用嵌套的三目运算</span></span><br><span class="line"><span class="string">"no-new"</span>: <span class="number">1</span>,<span class="comment">//禁止在使用new构造一个实例后不赋值</span></span><br><span class="line"><span class="string">"no-new-func"</span>: <span class="number">1</span>,<span class="comment">//禁止使用new Function</span></span><br><span class="line"><span class="string">"no-new-object"</span>: <span class="number">2</span>,<span class="comment">//禁止使用new Object()</span></span><br><span class="line"><span class="string">"no-new-require"</span>: <span class="number">2</span>,<span class="comment">//禁止使用new require</span></span><br><span class="line"><span class="string">"no-new-wrappers"</span>: <span class="number">2</span>,<span class="comment">//禁止使用new创建包装实例，new String new Boolean new Number</span></span><br><span class="line"><span class="string">"no-obj-calls"</span>: <span class="number">2</span>,<span class="comment">//不能调用内置的全局对象，比如Math() JSON()</span></span><br><span class="line"><span class="string">"no-octal"</span>: <span class="number">2</span>,<span class="comment">//禁止使用八进制数字</span></span><br><span class="line"><span class="string">"no-octal-escape"</span>: <span class="number">2</span>,<span class="comment">//禁止使用八进制转义序列</span></span><br><span class="line"><span class="string">"no-param-reassign"</span>: <span class="number">2</span>,<span class="comment">//禁止给参数重新赋值</span></span><br><span class="line"><span class="string">"no-path-concat"</span>: <span class="number">0</span>,<span class="comment">//node中不能使用__dirname或__filename做路径拼接</span></span><br><span class="line"><span class="string">"no-plusplus"</span>: <span class="number">0</span>,<span class="comment">//禁止使用++，--</span></span><br><span class="line"><span class="string">"no-process-env"</span>: <span class="number">0</span>,<span class="comment">//禁止使用process.env</span></span><br><span class="line"><span class="string">"no-process-exit"</span>: <span class="number">0</span>,<span class="comment">//禁止使用process.exit()</span></span><br><span class="line"><span class="string">"no-proto"</span>: <span class="number">2</span>,<span class="comment">//禁止使用__proto__属性</span></span><br><span class="line"><span class="string">"no-redeclare"</span>: <span class="number">2</span>,<span class="comment">//禁止重复声明变量</span></span><br><span class="line"><span class="string">"no-regex-spaces"</span>: <span class="number">2</span>,<span class="comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span><br><span class="line"><span class="string">"no-restricted-modules"</span>: <span class="number">0</span>,<span class="comment">//如果禁用了指定模块，使用就会报错</span></span><br><span class="line"><span class="string">"no-return-assign"</span>: <span class="number">1</span>,<span class="comment">//return 语句中不能有赋值表达式</span></span><br><span class="line"><span class="string">"no-script-url"</span>: <span class="number">0</span>,<span class="comment">//禁止使用javascript:void(0)</span></span><br><span class="line"><span class="string">"no-self-compare"</span>: <span class="number">2</span>,<span class="comment">//不能比较自身</span></span><br><span class="line"><span class="string">"no-sequences"</span>: <span class="number">0</span>,<span class="comment">//禁止使用逗号运算符</span></span><br><span class="line"><span class="string">"no-shadow"</span>: <span class="number">2</span>,<span class="comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span><br><span class="line"><span class="string">"no-shadow-restricted-names"</span>: <span class="number">2</span>,<span class="comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span><br><span class="line"><span class="string">"no-spaced-func"</span>: <span class="number">2</span>,<span class="comment">//函数调用时 函数名与()之间不能有空格</span></span><br><span class="line"><span class="string">"no-sparse-arrays"</span>: <span class="number">2</span>,<span class="comment">//禁止稀疏数组， [1,,2]</span></span><br><span class="line"><span class="string">"no-sync"</span>: <span class="number">0</span>,<span class="comment">//nodejs 禁止同步方法</span></span><br><span class="line"><span class="string">"no-ternary"</span>: <span class="number">0</span>,<span class="comment">//禁止使用三目运算符</span></span><br><span class="line"><span class="string">"no-trailing-spaces"</span>: <span class="number">1</span>,<span class="comment">//一行结束后面不要有空格</span></span><br><span class="line"><span class="string">"no-this-before-super"</span>: <span class="number">0</span>,<span class="comment">//在调用super()之前不能使用this或super</span></span><br><span class="line"><span class="string">"no-throw-literal"</span>: <span class="number">2</span>,<span class="comment">//禁止抛出字面量错误 throw "error";</span></span><br><span class="line"><span class="string">"no-undef"</span>: <span class="number">1</span>,<span class="comment">//不能有未定义的变量</span></span><br><span class="line"><span class="string">"no-undef-init"</span>: <span class="number">2</span>,<span class="comment">//变量初始化时不能直接给它赋值为undefined</span></span><br><span class="line"><span class="string">"no-undefined"</span>: <span class="number">2</span>,<span class="comment">//不能使用undefined</span></span><br><span class="line"><span class="string">"no-unexpected-multiline"</span>: <span class="number">2</span>,<span class="comment">//避免多行表达式</span></span><br><span class="line"><span class="string">"no-underscore-dangle"</span>: <span class="number">1</span>,<span class="comment">//标识符不能以_开头或结尾</span></span><br><span class="line"><span class="string">"no-unneeded-ternary"</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span><br><span class="line"><span class="string">"no-unreachable"</span>: <span class="number">2</span>,<span class="comment">//不能有无法执行的代码</span></span><br><span class="line"><span class="string">"no-unused-expressions"</span>: <span class="number">2</span>,<span class="comment">//禁止无用的表达式</span></span><br><span class="line"><span class="string">"no-unused-vars"</span>: [<span class="number">2</span>, &#123;<span class="string">"vars"</span>: <span class="string">"all"</span>, <span class="string">"args"</span>: <span class="string">"after-used"</span>&#125;],<span class="comment">//不能有声明后未被使用的变量或参数</span></span><br><span class="line"><span class="string">"no-use-before-define"</span>: <span class="number">2</span>,<span class="comment">//未定义前不能使用</span></span><br><span class="line"><span class="string">"no-useless-call"</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的call和apply</span></span><br><span class="line"><span class="string">"no-void"</span>: <span class="number">2</span>,<span class="comment">//禁用void操作符</span></span><br><span class="line"><span class="string">"no-var"</span>: <span class="number">0</span>,<span class="comment">//禁用var，用let和const代替</span></span><br><span class="line"><span class="string">"no-warning-comments"</span>: [<span class="number">1</span>, &#123; <span class="string">"terms"</span>: [<span class="string">"todo"</span>, <span class="string">"fixme"</span>, <span class="string">"xxx"</span>], <span class="string">"location"</span>: <span class="string">"start"</span> &#125;],<span class="comment">//不能有警告备注</span></span><br><span class="line"><span class="string">"no-with"</span>: <span class="number">2</span>,<span class="comment">//禁用with</span></span><br><span class="line"></span><br><span class="line"><span class="string">"array-bracket-spacing"</span>: [<span class="number">2</span>, <span class="string">"never"</span>],<span class="comment">//是否允许非空数组里面有多余的空格</span></span><br><span class="line"><span class="string">"arrow-parens"</span>: <span class="number">0</span>,<span class="comment">//箭头函数用小括号括起来</span></span><br><span class="line"><span class="string">"arrow-spacing"</span>: <span class="number">0</span>,<span class="comment">//=&gt;的前/后括号</span></span><br><span class="line"><span class="string">"accessor-pairs"</span>: <span class="number">0</span>,<span class="comment">//在对象中使用getter/setter</span></span><br><span class="line"><span class="string">"block-scoped-var"</span>: <span class="number">0</span>,<span class="comment">//块语句中使用var</span></span><br><span class="line"><span class="string">"brace-style"</span>: [<span class="number">1</span>, <span class="string">"1tbs"</span>],<span class="comment">//大括号风格</span></span><br><span class="line"><span class="string">"callback-return"</span>: <span class="number">1</span>,<span class="comment">//避免多次调用回调什么的</span></span><br><span class="line"><span class="string">"camelcase"</span>: <span class="number">2</span>,<span class="comment">//强制驼峰法命名</span></span><br><span class="line"><span class="string">"comma-dangle"</span>: [<span class="number">2</span>, <span class="string">"never"</span>],<span class="comment">//对象字面量项尾不能有逗号</span></span><br><span class="line"><span class="string">"comma-spacing"</span>: <span class="number">0</span>,<span class="comment">//逗号前后的空格</span></span><br><span class="line"><span class="string">"comma-style"</span>: [<span class="number">2</span>, <span class="string">"last"</span>],<span class="comment">//逗号风格，换行时在行首还是行尾</span></span><br><span class="line"><span class="string">"complexity"</span>: [<span class="number">0</span>, <span class="number">11</span>],<span class="comment">//循环复杂度</span></span><br><span class="line"><span class="string">"computed-property-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>],<span class="comment">//是否允许计算后的键名什么的</span></span><br><span class="line"><span class="string">"consistent-return"</span>: <span class="number">0</span>,<span class="comment">//return 后面是否允许省略</span></span><br><span class="line"><span class="string">"consistent-this"</span>: [<span class="number">2</span>, <span class="string">"that"</span>],<span class="comment">//this别名</span></span><br><span class="line"><span class="string">"constructor-super"</span>: <span class="number">0</span>,<span class="comment">//非派生类不能调用super，派生类必须调用super</span></span><br><span class="line"><span class="string">"curly"</span>: [<span class="number">2</span>, <span class="string">"all"</span>],<span class="comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span></span><br><span class="line"><span class="string">"default-case"</span>: <span class="number">2</span>,<span class="comment">//switch语句最后必须有default</span></span><br><span class="line"><span class="string">"dot-location"</span>: <span class="number">0</span>,<span class="comment">//对象访问符的位置，换行的时候在行首还是行尾</span></span><br><span class="line"><span class="string">"dot-notation"</span>: [<span class="number">0</span>, &#123; <span class="string">"allowKeywords"</span>: <span class="literal">true</span> &#125;],<span class="comment">//避免不必要的方括号</span></span><br><span class="line"><span class="string">"eol-last"</span>: <span class="number">0</span>,<span class="comment">//文件以单一的换行符结束</span></span><br><span class="line"><span class="string">"eqeqeq"</span>: <span class="number">2</span>,<span class="comment">//必须使用全等</span></span><br><span class="line"><span class="string">"func-names"</span>: <span class="number">0</span>,<span class="comment">//函数表达式必须有名字</span></span><br><span class="line"><span class="string">"func-style"</span>: [<span class="number">0</span>, <span class="string">"declaration"</span>],<span class="comment">//函数风格，规定只能使用函数声明/函数表达式</span></span><br><span class="line"><span class="string">"generator-star-spacing"</span>: <span class="number">0</span>,<span class="comment">//生成器函数*的前后空格</span></span><br><span class="line"><span class="string">"guard-for-in"</span>: <span class="number">0</span>,<span class="comment">//for in循环要用if语句过滤</span></span><br><span class="line"><span class="string">"handle-callback-err"</span>: <span class="number">0</span>,<span class="comment">//nodejs 处理错误</span></span><br><span class="line"><span class="string">"id-length"</span>: <span class="number">0</span>,<span class="comment">//变量名长度</span></span><br><span class="line"><span class="string">"indent"</span>: [<span class="number">2</span>, <span class="number">4</span>],<span class="comment">//缩进风格</span></span><br><span class="line"><span class="string">"init-declarations"</span>: <span class="number">0</span>,<span class="comment">//声明时必须赋初值</span></span><br><span class="line"><span class="string">"key-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"beforeColon"</span>: <span class="literal">false</span>, <span class="string">"afterColon"</span>: <span class="literal">true</span> &#125;],<span class="comment">//对象字面量中冒号的前后空格</span></span><br><span class="line"><span class="string">"lines-around-comment"</span>: <span class="number">0</span>,<span class="comment">//行前/行后备注</span></span><br><span class="line"><span class="string">"max-depth"</span>: [<span class="number">0</span>, <span class="number">4</span>],<span class="comment">//嵌套块深度</span></span><br><span class="line"><span class="string">"max-len"</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">4</span>],<span class="comment">//字符串最大长度</span></span><br><span class="line"><span class="string">"max-nested-callbacks"</span>: [<span class="number">0</span>, <span class="number">2</span>],<span class="comment">//回调嵌套深度</span></span><br><span class="line"><span class="string">"max-params"</span>: [<span class="number">0</span>, <span class="number">3</span>],<span class="comment">//函数最多只能有3个参数</span></span><br><span class="line"><span class="string">"max-statements"</span>: [<span class="number">0</span>, <span class="number">10</span>],<span class="comment">//函数内最多有几个声明</span></span><br><span class="line"><span class="string">"new-cap"</span>: <span class="number">2</span>,<span class="comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span><br><span class="line"><span class="string">"new-parens"</span>: <span class="number">2</span>,<span class="comment">//new时必须加小括号</span></span><br><span class="line"><span class="string">"newline-after-var"</span>: <span class="number">2</span>,<span class="comment">//变量声明后是否需要空一行</span></span><br><span class="line"><span class="string">"object-curly-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>],<span class="comment">//大括号内是否允许不必要的空格</span></span><br><span class="line"><span class="string">"object-shorthand"</span>: <span class="number">0</span>,<span class="comment">//强制对象字面量缩写语法</span></span><br><span class="line"><span class="string">"one-var"</span>: <span class="number">1</span>,<span class="comment">//连续声明</span></span><br><span class="line"><span class="string">"operator-assignment"</span>: [<span class="number">0</span>, <span class="string">"always"</span>],<span class="comment">//赋值运算符 += -=什么的</span></span><br><span class="line"><span class="string">"operator-linebreak"</span>: [<span class="number">2</span>, <span class="string">"after"</span>],<span class="comment">//换行时运算符在行尾还是行首</span></span><br><span class="line"><span class="string">"padded-blocks"</span>: <span class="number">0</span>,<span class="comment">//块语句内行首行尾是否要空行</span></span><br><span class="line"><span class="string">"prefer-const"</span>: <span class="number">0</span>,<span class="comment">//首选const</span></span><br><span class="line"><span class="string">"prefer-spread"</span>: <span class="number">0</span>,<span class="comment">//首选展开运算</span></span><br><span class="line"><span class="string">"prefer-reflect"</span>: <span class="number">0</span>,<span class="comment">//首选Reflect的方法</span></span><br><span class="line"><span class="string">"quotes"</span>: [<span class="number">1</span>, <span class="string">"single"</span>],<span class="comment">//引号类型 `` "" ''</span></span><br><span class="line"><span class="string">"quote-props"</span>:[<span class="number">2</span>, <span class="string">"always"</span>],<span class="comment">//对象字面量中的属性名是否强制双引号</span></span><br><span class="line"><span class="string">"radix"</span>: <span class="number">2</span>,<span class="comment">//parseInt必须指定第二个参数</span></span><br><span class="line"><span class="string">"id-match"</span>: <span class="number">0</span>,<span class="comment">//命名检测</span></span><br><span class="line"><span class="string">"require-yield"</span>: <span class="number">0</span>,<span class="comment">//生成器函数必须有yield</span></span><br><span class="line"><span class="string">"semi"</span>: [<span class="number">2</span>, <span class="string">"always"</span>],<span class="comment">//语句强制分号结尾</span></span><br><span class="line"><span class="string">"semi-spacing"</span>: [<span class="number">0</span>, &#123;<span class="string">"before"</span>: <span class="literal">false</span>, <span class="string">"after"</span>: <span class="literal">true</span>&#125;],<span class="comment">//分号前后空格</span></span><br><span class="line"><span class="string">"sort-vars"</span>: <span class="number">0</span>,<span class="comment">//变量声明时排序</span></span><br><span class="line"><span class="string">"space-after-keywords"</span>: [<span class="number">0</span>, <span class="string">"always"</span>],<span class="comment">//关键字后面是否要空一格</span></span><br><span class="line"><span class="string">"space-before-blocks"</span>: [<span class="number">0</span>, <span class="string">"always"</span>],<span class="comment">//不以新行开始的块&#123;前面要不要有空格</span></span><br><span class="line"><span class="string">"space-before-function-paren"</span>: [<span class="number">0</span>, <span class="string">"always"</span>],<span class="comment">//函数定义时括号前面要不要有空格</span></span><br><span class="line"><span class="string">"space-in-parens"</span>: [<span class="number">0</span>, <span class="string">"never"</span>],<span class="comment">//小括号里面要不要有空格</span></span><br><span class="line"><span class="string">"space-infix-ops"</span>: <span class="number">0</span>,<span class="comment">//中缀操作符周围要不要有空格</span></span><br><span class="line"><span class="string">"space-return-throw-case"</span>: <span class="number">2</span>,<span class="comment">//return throw case后面要不要加空格</span></span><br><span class="line"><span class="string">"space-unary-ops"</span>: [<span class="number">0</span>, &#123; <span class="string">"words"</span>: <span class="literal">true</span>, <span class="string">"nonwords"</span>: <span class="literal">false</span> &#125;],<span class="comment">//一元运算符的前/后要不要加空格</span></span><br><span class="line"><span class="string">"spaced-comment"</span>: <span class="number">0</span>,<span class="comment">//注释风格要不要有空格什么的</span></span><br><span class="line"><span class="string">"strict"</span>: <span class="number">2</span>,<span class="comment">//使用严格模式</span></span><br><span class="line"><span class="string">"use-isnan"</span>: <span class="number">2</span>,<span class="comment">//禁止比较时使用NaN，只能用isNaN()</span></span><br><span class="line"><span class="string">"valid-jsdoc"</span>: <span class="number">0</span>,<span class="comment">//jsdoc规则</span></span><br><span class="line"><span class="string">"valid-typeof"</span>: <span class="number">2</span>,<span class="comment">//必须使用合法的typeof的值</span></span><br><span class="line"><span class="string">"vars-on-top"</span>: <span class="number">2</span>,<span class="comment">//var必须放在作用域顶部</span></span><br><span class="line"><span class="string">"wrap-iife"</span>: [<span class="number">2</span>, <span class="string">"inside"</span>],<span class="comment">//立即执行函数表达式的小括号风格</span></span><br><span class="line"><span class="string">"wrap-regex"</span>: <span class="number">0</span>,<span class="comment">//正则表达式字面量用小括号包起来</span></span><br><span class="line"><span class="string">"yoda"</span>: [<span class="number">2</span>, <span class="string">"never"</span>]<span class="comment">//禁止尤达条件</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录常用的Eslint检验配置&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vuex理解</title>
    <link href="http://yoursite.com/2018/04/27/Vuex%E5%AE%98%E6%96%B9%E7%90%86%E8%A7%A3%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/04/27/Vuex官方理解笔记/</id>
    <published>2018-04-27T08:56:35.147Z</published>
    <updated>2018-04-27T08:54:20.063Z</updated>
    
    <content type="html"><![CDATA[<p>最好提前在你的store中初始化好所有所需属性。<br><a id="more"></a></p><p>在src同级目录下 新建一个store文件夹<br>在下面分别建立<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">|--src</span><br><span class="line">    |-store</span><br><span class="line">    |    |--index.js</span><br><span class="line">    |    |--state.js</span><br><span class="line">    |    |--mutations.js</span><br><span class="line">    |    |--getters.js</span><br><span class="line">    |    |--actions.js</span><br></pre></td></tr></table></figure></p><p>index.js中，引入其他文件并导出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex, &#123; Store &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> state <span class="keyword">from</span> <span class="string">'./state'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> getters <span class="keyword">from</span> <span class="string">'./getters'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> actions <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> mutations <span class="keyword">from</span><span class="string">'./mutations'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations,</span><br><span class="line">  strict: process.env.NODE_ENV !== <span class="string">'production'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">module</span>.hot) &#123;</span><br><span class="line">  <span class="built_in">module</span>.hot.accept([</span><br><span class="line">    <span class="string">'./getters'</span>,</span><br><span class="line">    <span class="string">'./actions'</span>,</span><br><span class="line">    <span class="string">'./mutations'</span></span><br><span class="line">  ], <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    store.hotUpdate(&#123;</span><br><span class="line">      getters: <span class="keyword">await</span> <span class="keyword">import</span>(<span class="string">'./getters'</span>),</span><br><span class="line">      actions: <span class="keyword">await</span> <span class="keyword">import</span>(<span class="string">'./actions'</span>),</span><br><span class="line">      mutations: <span class="keyword">await</span> <span class="keyword">import</span>(<span class="string">'./mutations'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><h3 id="mapState-辅助函数"><a href="#mapState-辅助函数" class="headerlink" title="mapState 辅助函数"></a>mapState 辅助函数</h3><p>这样 就可以在页面中直接使用 this.count获取state 中 count的值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">computed:&#123;</span><br><span class="line">     mapState([</span><br><span class="line">      <span class="comment">// 映射 this.count 为 store.state.count</span></span><br><span class="line">      <span class="string">'count'</span></span><br><span class="line">    ])   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="mapMutation的使用"><a href="#mapMutation的使用" class="headerlink" title="mapMutation的使用"></a>mapMutation的使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapMutations([</span><br><span class="line">      <span class="string">'increment'</span>, <span class="comment">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// `mapMutations` 也支持载荷：</span></span><br><span class="line">      <span class="string">'incrementBy'</span> <span class="comment">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class="line">    ]),</span><br><span class="line">    ...mapMutations(&#123;</span><br><span class="line">      add: <span class="string">'increment'</span> <span class="comment">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mapGetter辅助函数"><a href="#mapGetter辅助函数" class="headerlink" title="mapGetter辅助函数"></a>mapGetter辅助函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  computed: &#123;</span><br><span class="line">  <span class="comment">// 使用对象展开运算符将 getter 混入 computed 对象中</span></span><br><span class="line">    ...mapGetters([</span><br><span class="line">      <span class="string">'doneTodosCount'</span>,</span><br><span class="line">      <span class="string">'anotherGetter'</span>,</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    ])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用对象格式可以为getters中的方法起别名</span></span><br><span class="line">mapGetters(&#123;</span><br><span class="line">  <span class="comment">// 映射 `this.doneCount` 为 `store.getters.doneTodosCount`</span></span><br><span class="line">  doneCount: <span class="string">'doneTodosCount'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最好提前在你的store中初始化好所有所需属性。&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>收集常用工具函数，拿来即用</title>
    <link href="http://yoursite.com/2018/03/24/%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%EF%BC%8C%E5%BF%85%E5%85%88%E5%88%A9%E5%85%B6%E5%99%A8/%E6%94%B6%E9%9B%86%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0%EF%BC%8C%E6%8B%BF%E6%9D%A5%E5%8D%B3%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/24/工欲善其事，必先利其器/收集常用工具函数，拿来即用/</id>
    <published>2018-03-24T09:04:57.464Z</published>
    <updated>2018-03-24T09:04:44.147Z</updated>
    
    <content type="html"><![CDATA[<p>一些常用的工具函数<br><a id="more"></a></p><p><a href="https://www.cnblogs.com/pdq-phper/p/5093486.html" target="_blank" rel="noopener">sublime配置</a></p><h4 id="url地址对象解析"><a href="#url地址对象解析" class="headerlink" title="url地址对象解析"></a>url地址对象解析</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseQueryString</span>(<span class="params">url</span>)</span>&#123;  </span><br><span class="line">    <span class="keyword">var</span> result=&#123;&#125;;  </span><br><span class="line">    <span class="keyword">var</span> params=url.split(<span class="string">"?"</span>)[<span class="number">1</span>].split(<span class="string">"&amp;"</span>);  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,length=params.length;i&lt;length;i++)&#123;  </span><br><span class="line">        <span class="keyword">var</span> temp=params[i].split(<span class="string">"="</span>);  </span><br><span class="line">        result[temp[<span class="number">0</span>]]=temp[<span class="number">1</span>];  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> result;</span><br></pre></td></tr></table></figure><h4 id="生成随机密码"><a href="#生成随机密码" class="headerlink" title="生成随机密码"></a>生成随机密码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomPassword</span>(<span class="params">size</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> seed = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>, <span class="string">"H"</span>, <span class="string">"I"</span>, <span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"N"</span>, <span class="string">"P"</span>, <span class="string">"Q"</span>, <span class="string">"R"</span>, <span class="string">"S"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>, <span class="string">"W"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"Z"</span>, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"g"</span>, <span class="string">"h"</span>, <span class="string">"i"</span>, <span class="string">"j"</span>, <span class="string">"k"</span>, <span class="string">"m"</span>, <span class="string">"n"</span>, <span class="string">"p"</span>, <span class="string">"Q"</span>, <span class="string">"r"</span>, <span class="string">"s"</span>, <span class="string">"t"</span>, <span class="string">"u"</span>, <span class="string">"v"</span>, <span class="string">"w"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>, <span class="string">"z"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>];</span><br><span class="line">  <span class="keyword">const</span> seedlength = seed.length;</span><br><span class="line">  <span class="keyword">let</span> createPassword = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> j = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * seedlength);</span><br><span class="line">    createPassword += seed[j];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> createPassword;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">randomPassword(<span class="number">5</span>)</span><br><span class="line"><span class="comment">// 输出："a5Csy"</span></span><br></pre></td></tr></table></figure><h4 id="判断时间间隔（几天前）"><a href="#判断时间间隔（几天前）" class="headerlink" title="判断时间间隔（几天前）"></a>判断时间间隔（几天前）</h4><p>传入的参数为需要判断的时间戳（毫秒）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateStr</span>(<span class="params">date</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取js 时间戳</span></span><br><span class="line">    <span class="keyword">var</span> time=<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    time=<span class="built_in">parseInt</span>((time-date*<span class="number">1000</span>)/<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储转换值</span></span><br><span class="line">    <span class="keyword">var</span> s;</span><br><span class="line">    <span class="keyword">if</span>(time&lt;<span class="number">60</span>*<span class="number">10</span>)&#123;<span class="comment">//十分钟内</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'刚刚'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((time&lt;<span class="number">60</span>*<span class="number">60</span>)&amp;&amp;(time&gt;=<span class="number">60</span>*<span class="number">10</span>))&#123;</span><br><span class="line">        <span class="comment">//超过十分钟少于1小时</span></span><br><span class="line">        s = <span class="built_in">Math</span>.floor(time/<span class="number">60</span>);</span><br><span class="line">        <span class="keyword">return</span>  s+<span class="string">"分钟前"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((time&lt;<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)&amp;&amp;(time&gt;=<span class="number">60</span>*<span class="number">60</span>))&#123; </span><br><span class="line">        <span class="comment">//超过1小时少于24小时</span></span><br><span class="line">        s = <span class="built_in">Math</span>.floor(time/<span class="number">60</span>/<span class="number">60</span>);</span><br><span class="line">        <span class="keyword">return</span>  s+<span class="string">"小时前"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((time&lt;<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">3</span>)&amp;&amp;(time&gt;=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>))&#123; </span><br><span class="line">        <span class="comment">//超过1天少于3天内</span></span><br><span class="line">        s = <span class="built_in">Math</span>.floor(time/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>);</span><br><span class="line">        <span class="keyword">return</span> s+<span class="string">"天前"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="comment">//超过3天</span></span><br><span class="line">        <span class="keyword">var</span> date= <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">parseInt</span>(date) * <span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">return</span> date.getFullYear()+<span class="string">"/"</span>+(date.getMonth()+<span class="number">1</span>)+<span class="string">"/"</span>+date.getDate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">dateStr(<span class="number">1521697302999</span>)</span><br><span class="line"><span class="comment">// 输出 "刚刚"</span></span><br></pre></td></tr></table></figure></p><h4 id="时间日期格式化"><a href="#时间日期格式化" class="headerlink" title="时间日期格式化"></a>时间日期格式化</h4><p>date参数为待格式化的日期字符串<br>参数format为格式化格式 默认为yyyy-MM-dd hh:mm:ss  </p><p>return a.toString().replace(/^(\d)$/,”0$1”)</p><p>如果a是一位数，则在前面加0<br>1—-&gt;01<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFmt</span>(<span class="params">date, format</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!date) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  date = <span class="keyword">new</span> <span class="built_in">Date</span>(date);</span><br><span class="line">  <span class="keyword">const</span> paddNum = <span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">      num += <span class="string">''</span></span><br><span class="line">      <span class="keyword">return</span> num.replace(<span class="regexp">/^(\d)$/</span>, <span class="string">'0$1'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 指定格式字符</span></span><br><span class="line">  <span class="keyword">const</span> cfg = &#123;</span><br><span class="line">    yyyy: date.getFullYear(),</span><br><span class="line">    yy: date.getFullYear().toString().substring(<span class="number">2</span>),</span><br><span class="line">    M: date.getMonth() + <span class="number">1</span>,</span><br><span class="line">    MM: paddNum(date.getMonth() + <span class="number">1</span>),</span><br><span class="line">    d: date.getDate(),</span><br><span class="line">    dd: paddNum(date.getDate()),</span><br><span class="line">    hh: paddNum(date.getHours()),</span><br><span class="line">    mm: paddNum(date.getMinutes()),</span><br><span class="line">    ss: paddNum(date.getSeconds())</span><br><span class="line">  &#125;</span><br><span class="line">  format || (format = <span class="string">'yyyy-MM-dd hh:mm:ss'</span>)</span><br><span class="line">  <span class="keyword">return</span> format.replace(<span class="regexp">/([a-z])(\1)*/ig</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cfg[m]</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dateFmt(<span class="number">1521697721522</span>,<span class="string">'yyyy-MM-dd'</span>)</span><br><span class="line"><span class="comment">// 输出： "2018-03-22"</span></span><br><span class="line">dateFmt(<span class="number">1521697721522</span>,<span class="string">'hh:mm:ss'</span>)</span><br><span class="line"><span class="comment">// 输出  "13:48:41"</span></span><br></pre></td></tr></table></figure></p><h4 id="判断日期是否为今天"><a href="#判断日期是否为今天" class="headerlink" title="判断日期是否为今天"></a>判断日期是否为今天</h4><p>基于上例的格式化函数dateFmt()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isToday</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> date = str &amp;&amp; <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">  date = dateFmt(date, <span class="string">'yyyy-MM-dd'</span>);</span><br><span class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> y = now.getFullYear();</span><br><span class="line">  <span class="keyword">var</span> m = (now.getMonth() + <span class="number">1</span>) &lt; <span class="number">10</span> ? <span class="string">'0'</span> + (now.getMonth() + <span class="number">1</span>) : (now.getMonth() + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">var</span> d = now.getDate() &lt; <span class="number">10</span> ? <span class="string">'0'</span> + now.getDate() : now.getDate();</span><br><span class="line">  <span class="keyword">var</span> today = y + <span class="string">'-'</span> + m + <span class="string">'-'</span> + d;</span><br><span class="line">  <span class="keyword">return</span> today === date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数字转金额"><a href="#数字转金额" class="headerlink" title="数字转金额"></a>数字转金额</h4><p>参数s为待转换的金额  </p><p>n为需要保留的小数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function currencyFmt(s, n) &#123;</span><br><span class="line">  n = n &gt; 0 &amp;&amp; n &lt;= 20 ? n : 2;</span><br><span class="line">  if (!s &amp;&amp; s !== 0) &#123;</span><br><span class="line">    return &apos;&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">  s = parseFloat((s + &apos;&apos;).replace(/[^\d\.-]/g, &apos;&apos;)).toFixed(n) + &apos;&apos;;</span><br><span class="line">  var l = s.split(&apos;.&apos;)[0],</span><br><span class="line">    r = s.split(&apos;.&apos;)[1];</span><br><span class="line">  return &apos;\u00a5&apos; + &apos; &apos; + l + &apos;.&apos; + r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">currencyFmt(123.2568,3)</span><br><span class="line">// 输出 &quot;¥ 123.257&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些常用的工具函数&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>数字动态切换</title>
    <link href="http://yoursite.com/2018/03/20/%E4%B8%80%E4%B8%AA%E5%89%8D%E6%AE%B5%E6%95%B0%E6%8D%AE%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/03/20/一个前段数据动态显示的插件/</id>
    <published>2018-03-20T15:27:42.519Z</published>
    <updated>2018-03-20T15:37:05.872Z</updated>
    
    <content type="html"><![CDATA[<p>贴代码<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"number-slide"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> numRun2 = $(<span class="string">".number-slide"</span>).numberAnimate(&#123;</span></span><br><span class="line"><span class="javascript">    num: <span class="string">'212135'</span>, <span class="comment">// 初始值</span></span></span><br><span class="line"><span class="javascript">    speed: <span class="number">1000</span>, <span class="comment">//  切换速度</span></span></span><br><span class="line"><span class="javascript">    symbol: <span class="string">","</span></span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> nums2 = <span class="number">212135</span>;</span></span><br><span class="line"><span class="javascript">  setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> n = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">7</span> + <span class="number">1</span>)</span></span><br><span class="line"><span class="undefined">    nums2 += n;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(n, nums2)</span></span><br><span class="line"><span class="undefined">    numRun2.resetData(nums2);</span></span><br><span class="line"><span class="undefined">  &#125;, 5000);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.mt-number-animate</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"Helvetica35-Thin"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mt-number-animate</span> <span class="selector-class">.mt-number-animate-dot</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">text-align</span>: center</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mt-number-animate</span> <span class="selector-class">.mt-number-animate-dom</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"Helvetica35-Thin"</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mt-number-animate</span> <span class="selector-class">.mt-number-animate-dom</span> <span class="selector-class">.mt-number-animate-span</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">float</span>: left</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $.fn.numberAnimate = <span class="function"><span class="keyword">function</span>(<span class="params">setting</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> defaults = &#123;</span><br><span class="line">        speed: <span class="number">1000</span>, <span class="comment">//动画速度</span></span><br><span class="line">        num: <span class="string">""</span>, <span class="comment">//初始化值</span></span><br><span class="line">        iniAnimate: <span class="literal">true</span>, <span class="comment">//是否要初始化动画效果</span></span><br><span class="line">        symbol: <span class="string">''</span>, <span class="comment">//默认的分割符号，千，万，千万</span></span><br><span class="line">        dot: <span class="number">0</span> <span class="comment">//保留几位小数点</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//如果setting为空，就取default的值</span></span><br><span class="line">    <span class="keyword">var</span> setting = $.extend(defaults, setting);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果对象有多个，提示出错</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="keyword">this</span>).length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      alert(<span class="string">"just only one obj!"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果未设置初始化值。提示出错</span></span><br><span class="line">    <span class="keyword">if</span> (setting.num == <span class="string">""</span>) &#123;</span><br><span class="line">      alert(<span class="string">"must set a num!"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> nHtml = <span class="string">'&lt;div class="mt-number-animate-dom" data-num="&#123;&#123;num&#125;&#125;"&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;0&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;1&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;2&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;3&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;4&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;5&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;6&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;7&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;8&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;9&lt;/span&gt;\</span></span><br><span class="line"><span class="string">            &lt;span class="mt-number-animate-span"&gt;.&lt;/span&gt;\</span></span><br><span class="line"><span class="string">          &lt;/div&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数字处理</span></span><br><span class="line">    <span class="keyword">var</span> numToArr = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">      num = <span class="built_in">parseFloat</span>(num).toFixed(setting.dot);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span>(num) == <span class="string">'number'</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> arrStr = num.toString().split(<span class="string">""</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> arrStr = num.split(<span class="string">""</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//console.log(arrStr);</span></span><br><span class="line">      <span class="keyword">return</span> arrStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置DOM symbol:分割符号</span></span><br><span class="line">    <span class="keyword">var</span> setNumDom = <span class="function"><span class="keyword">function</span>(<span class="params">arrStr</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> shtml = <span class="string">'&lt;div class="mt-number-animate"&gt;'</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = arrStr.length; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; (len - i) % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; setting.symbol != <span class="string">""</span> &amp;&amp; arrStr[i] != <span class="string">"."</span>) &#123;</span><br><span class="line">          shtml += <span class="string">'&lt;div class="mt-number-animate-dot"&gt;'</span> + setting.symbol + <span class="string">'&lt;/div&gt;'</span> + nHtml.replace(<span class="string">"&#123;&#123;num&#125;&#125;"</span>, arrStr[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          shtml += nHtml.replace(<span class="string">"&#123;&#123;num&#125;&#125;"</span>, arrStr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      shtml += <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">      <span class="keyword">return</span> shtml;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行动画</span></span><br><span class="line">    <span class="keyword">var</span> runAnimate = <span class="function"><span class="keyword">function</span>(<span class="params">$parent</span>) </span>&#123;</span><br><span class="line">      $parent.find(<span class="string">".mt-number-animate-dom"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num = $(<span class="keyword">this</span>).attr(<span class="string">"data-num"</span>);</span><br><span class="line">        num = (num == <span class="string">"."</span> ? <span class="number">10</span> : num);</span><br><span class="line">        <span class="keyword">var</span> spanHei = $(<span class="keyword">this</span>).height() / <span class="number">11</span>; <span class="comment">//11为元素个数</span></span><br><span class="line">        <span class="keyword">var</span> thisTop = -num * spanHei + <span class="string">"px"</span>;</span><br><span class="line">        <span class="keyword">if</span> (thisTop != $(<span class="keyword">this</span>).css(<span class="string">"top"</span>)) &#123;</span><br><span class="line">          <span class="keyword">if</span> (setting.iniAnimate) &#123;</span><br><span class="line">            <span class="comment">//HTML5不支持</span></span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">window</span>.applicationCache) &#123;</span><br><span class="line">              $(<span class="keyword">this</span>).animate(&#123;</span><br><span class="line">                top: thisTop</span><br><span class="line">              &#125;, setting.speed);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              $(<span class="keyword">this</span>).css(&#123;</span><br><span class="line">                <span class="string">'transform'</span>: <span class="string">'translateY('</span> + thisTop + <span class="string">')'</span>,</span><br><span class="line">                <span class="string">'-ms-transform'</span>: <span class="string">'translateY('</span> + thisTop + <span class="string">')'</span>,</span><br><span class="line">                <span class="comment">/* IE 9 */</span></span><br><span class="line">                <span class="string">'-moz-transform'</span>: <span class="string">'translateY('</span> + thisTop + <span class="string">')'</span>,</span><br><span class="line">                <span class="comment">/* Firefox */</span></span><br><span class="line">                <span class="string">'-webkit-transform'</span>: <span class="string">'translateY('</span> + thisTop + <span class="string">')'</span>,</span><br><span class="line">                <span class="comment">/* Safari 和 Chrome */</span></span><br><span class="line">                <span class="string">'-o-transform'</span>: <span class="string">'translateY('</span> + thisTop + <span class="string">')'</span>,</span><br><span class="line">                <span class="string">'-ms-transition'</span>: setting.speed / <span class="number">1000</span> + <span class="string">'s'</span>,</span><br><span class="line">                <span class="string">'-moz-transition'</span>: setting.speed / <span class="number">1000</span> + <span class="string">'s'</span>,</span><br><span class="line">                <span class="string">'-webkit-transition'</span>: setting.speed / <span class="number">1000</span> + <span class="string">'s'</span>,</span><br><span class="line">                <span class="string">'-o-transition'</span>: setting.speed / <span class="number">1000</span> + <span class="string">'s'</span>,</span><br><span class="line">                <span class="string">'transition'</span>: setting.speed / <span class="number">1000</span> + <span class="string">'s'</span></span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setting.iniAnimate = <span class="literal">true</span>;</span><br><span class="line">            $(<span class="keyword">this</span>).css(&#123;</span><br><span class="line">              top: thisTop</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">var</span> init = <span class="function"><span class="keyword">function</span>(<span class="params">$parent</span>) </span>&#123;</span><br><span class="line">      <span class="comment">//初始化</span></span><br><span class="line">      $parent.html(setNumDom(numToArr(setting.num)));</span><br><span class="line">      runAnimate($parent);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重置参数</span></span><br><span class="line">    <span class="keyword">this</span>.resetData = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> newArr = numToArr(num);</span><br><span class="line">        <span class="keyword">var</span> $dom = $(<span class="keyword">this</span>).find(<span class="string">".mt-number-animate-dom"</span>);</span><br><span class="line">        <span class="keyword">if</span> ($dom.length &lt; newArr.length) &#123;</span><br><span class="line">          $(<span class="keyword">this</span>).html(setNumDom(numToArr(num)));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          $dom.each(<span class="function"><span class="keyword">function</span>(<span class="params">index, el</span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).attr(<span class="string">"data-num"</span>, newArr[index]);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        runAnimate($(<span class="keyword">this</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//init</span></span><br><span class="line">    init($(<span class="keyword">this</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;贴代码&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>gulp搭建项目流程</title>
    <link href="http://yoursite.com/2018/03/20/gulp%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/03/20/gulp搭建项目流程/</id>
    <published>2018-03-20T15:27:39.425Z</published>
    <updated>2018-03-24T09:00:03.907Z</updated>
    
    <content type="html"><![CDATA[<p>关于gulp的一点介绍<br><a id="more"></a><br>所有的环境都是在 node 安装好的基础上执行的。 node -v 查看node的安装情况。npm -v查看npm 的安装情况.</p><p>gulp自动化构建常用参数</p><p>1、src 读取文件或者文件夹</p><p>2、dest 生成文件也就是写文件</p><p>3、watch 检测文件</p><p>4、tesk 指定任务</p><p>5、pipe 用流的方式处理 gulp.</p><p>在项目中创建以下文件夹<br>build<br>dist<br>src</p><blockquote><p>解释：</p><p>build  : 项目整合目录，一般在这里整合所有的代码，不压缩。</p><p>dist : 项目发布目录，也是压缩所有文件后的。</p><p>src :  项目源文件目录，这里放置的都是源文件。</p></blockquote><p>test : 这个是编写自动化测试的</p><p><strong>安装查看gulp，在项目根目录下。</strong>  </p><p>全局安装gulp </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp</span><br></pre></td></tr></table></figure><p>然后创建配置文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init    初始化并创建 package.json文件</span><br><span class="line">npm install --save-dev gulp  将Node的配置环境装进配置文件中</span><br></pre></td></tr></table></figure><p> 然后安装需要的插件</p><p><a href="https://www.cnblogs.com/Darren_code/p/gulp.html" target="_blank" rel="noopener">关于gulp插件的详细介绍请看这</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xxx —save-dev将文件自动写进配置文件中</span><br></pre></td></tr></table></figure></p><p>gulp-htmlmin 看到名字就能知道，这个插件是用来压缩HTML。PS：注释啥的都可以去掉哦，看文档get更多技能哈<br>gulp-imagemin 除了能压缩常见的图片格式，还能压缩 SVG，叼叼的~  </p><p>gulp-clean-css 压缩 CSS。我原本推荐的是  gulp-minify-css，结果其首页中已建议改用gulp-clean-css…   </p><p>gulp-uglify 专业压缩 Javascript<br>gulp-concat 上面几个都是压缩，这插件是管合并的…恭喜，“减少网络请求”的成就达成:)  </p><p>gulp-autoprefixer 给 CSS增加前缀。解决某些CSS属性不是标准属性，有各种浏览器前缀的情况，灰常有用  </p><p>gulp-rename 修改文件名称。比如有时我们需要把app.js改成app.min.js，瞬间高级了<br>gulp-util 最基础的工具，但俺只用来打日志…</p><p>一般常用的创建整站的有这些，多个的话可以将插件以空格的形式分开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean gulp-concat gulp-connect gulp-cssmin gulp-imagemin gulp-less gulp-load-plugins gulp-uglify open  -—save-dev</span><br></pre></td></tr></table></figure><p>然后则是gulpfile.js配置文件的编写。具体为下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="comment">//这样的话 其他的模块可以直接使用 $ 符号来引入</span></span><br><span class="line"><span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">'gulp-load-plugins'</span>)();</span><br><span class="line"><span class="keyword">var</span> open = <span class="built_in">require</span>(<span class="string">'open'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义目录路径</span></span><br><span class="line"><span class="keyword">var</span> app = &#123;</span><br><span class="line">    <span class="comment">//源代码，文件目录</span></span><br><span class="line">    srcPath: <span class="string">'src/'</span>,</span><br><span class="line">    <span class="comment">//文件整合之后的目录</span></span><br><span class="line">    devPath: <span class="string">'build/'</span>,</span><br><span class="line">    <span class="comment">//项目，发布目录上产部署</span></span><br><span class="line">    prdPath: <span class="string">'dist/'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过bower安装的插件，需要拷贝到 devPath prdPath中</span></span><br><span class="line">gulp.task(<span class="string">'lib'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//   /**/* 读取这个文件夹下边的所有的文件或者文件夹</span></span><br><span class="line">    gulp.src(<span class="string">'bower_components/**/*'</span>)</span><br><span class="line">    <span class="comment">//读取完整后进行操作  西安拷贝到整合目录 并重命名，在拷贝到生产目录并重命名</span></span><br><span class="line">    .pipe(gulp.dest(app.devPath + <span class="string">'vendor'</span>))</span><br><span class="line">    .pipe(gulp.dest(app.prdPath + <span class="string">'vendor'</span>))</span><br><span class="line">    .pipe($.connect.reload());  <span class="comment">//文件更改后自动变异 并执行启动服务重新打开浏览器</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//将 html 拷贝到 devPath prdPath中</span></span><br><span class="line">gulp.task(<span class="string">'html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src(app.srcPath + <span class="string">'**/*.html'</span>)</span><br><span class="line">    .pipe(gulp.dest(app.devPath))</span><br><span class="line">    .pipe(gulp.dest(app.prdPath))</span><br><span class="line">    .pipe($.connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//将 模拟的json 文件 拷贝到 devPath prdPath中</span></span><br><span class="line">gulp.task(<span class="string">'json'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src(app.srcPath + <span class="string">'data/**/*.json'</span>)</span><br><span class="line">    .pipe(gulp.dest(app.devPath + <span class="string">'data'</span>))</span><br><span class="line">    .pipe(gulp.dest(app.prdPath + <span class="string">'data'</span>))</span><br><span class="line">    .pipe($.connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将 index.less 文件 拷贝到 devPath prdPath中，index.less引入了所有的其他的less</span></span><br><span class="line">gulp.task(<span class="string">'less'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src(app.srcPath + <span class="string">'style/index.less'</span>)</span><br><span class="line">    .pipe($.less())</span><br><span class="line">    .pipe(gulp.dest(app.devPath + <span class="string">'css'</span>))</span><br><span class="line">    .pipe($.cssmin())</span><br><span class="line">    .pipe(gulp.dest(app.prdPath + <span class="string">'css'</span>))</span><br><span class="line">    .pipe($.connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 拷贝 js 文件  将所有的源文件中的js 文件整合成index.js 然后拷贝过去</span></span><br><span class="line">gulp.task(<span class="string">'script'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src(app.srcPath + <span class="string">'script/**/*.js'</span>)</span><br><span class="line">    .pipe($.concat(<span class="string">'index.js'</span>))</span><br><span class="line">    .pipe(gulp.dest(app.devPath + <span class="string">'js'</span>))</span><br><span class="line">    .pipe($.uglify())</span><br><span class="line">    .pipe(gulp.dest(app.prdPath + <span class="string">'js'</span>))</span><br><span class="line">    .pipe($.connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//拷贝 压缩 图片 最后放到发布目录下</span></span><br><span class="line">gulp.task(<span class="string">'image'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src(app.srcPath + <span class="string">'image/**/*'</span>)</span><br><span class="line">    <span class="comment">//江源图片放到整合目录下，在压缩放到生产目录下</span></span><br><span class="line">    .pipe(gulp.dest(app.devPath + <span class="string">'image'</span>))</span><br><span class="line">    .pipe($.imagemin())</span><br><span class="line">    .pipe(gulp.dest(app.prdPath + <span class="string">'image'</span>))</span><br><span class="line">    .pipe($.connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//总的方法</span></span><br><span class="line">gulp.task(<span class="string">'build'</span>,[<span class="string">'image'</span>, <span class="string">'script'</span>, <span class="string">'less'</span>, <span class="string">'json'</span>, <span class="string">'html'</span>, <span class="string">'lib'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//清除旧文件，每次更新的时候</span></span><br><span class="line">gulp.task(<span class="string">'clean'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.src([app.devPath,app.prdPath])</span><br><span class="line">    .pipe($.clean());</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写服务</span></span><br><span class="line">gulp.task(<span class="string">'serve'</span>,[<span class="string">'build'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.connect.server(&#123;</span><br><span class="line">        <span class="comment">//服务起来的入口</span></span><br><span class="line">        root: [app.devPath],</span><br><span class="line">        <span class="comment">//文件更改后自动刷新页面</span></span><br><span class="line">        livereload: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">//端口号</span></span><br><span class="line">        port: <span class="number">1234</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 在 命令工具中执行 gulp serve  就相当于是启动了服务</span></span><br><span class="line">    <span class="comment">//自动打开浏览器</span></span><br><span class="line">    open(<span class="string">'http://localhost:1234'</span>);</span><br><span class="line">    <span class="comment">//我们希望更改了文件，就自动编译，并且打包等然后打开浏览器</span></span><br><span class="line">    gulp.watch(<span class="string">'bower_components/**/*'</span> , [<span class="string">'lib'</span>]);</span><br><span class="line">    <span class="comment">//监听 script 下边的 js 文件，并执行 script 方法</span></span><br><span class="line">    gulp.watch(app.srcPath + <span class="string">'script/**/*.js'</span>, [<span class="string">'script'</span>]);</span><br><span class="line">    gulp.watch(app.srcPath + <span class="string">'**/*.html'</span>, [<span class="string">'html'</span>]);</span><br><span class="line">    gulp.watch(app.srcPath + <span class="string">'data/**/*.json'</span>, [<span class="string">'json'</span>]);</span><br><span class="line">    gulp.watch(app.srcPath + <span class="string">'style/**/*.less'</span>, [<span class="string">'less'</span>]);</span><br><span class="line">    gulp.watch(app.srcPath + <span class="string">'image/**/*'</span>, [<span class="string">'image'</span>]);</span><br><span class="line">    <span class="comment">//这样文件变更了就会自动构建</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认执行的任务，直接 执行 gulp 变行了。都编写完成后再终端 执行 gulp 便可以了。</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'serve'</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于gulp的一点介绍&lt;br&gt;
    
    </summary>
    
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>聊一聊package.json</title>
    <link href="http://yoursite.com/2018/03/20/%E8%81%8A%E4%B8%80%E8%81%8Apackage.json/"/>
    <id>http://yoursite.com/2018/03/20/聊一聊package.json/</id>
    <published>2018-03-20T15:27:08.396Z</published>
    <updated>2018-03-25T07:33:50.493Z</updated>
    
    <content type="html"><![CDATA[<p>每个项目的根目录下面，一般都有一个package.json文件，定义了这个项目所需要的各种模块<br><a id="more"></a></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>以及项目的配置信息（比如名称、版本、许可证等元数据）。npm install命令根据这个配置文件，自动下载所需的模块，也就是配置项目所需的运行和开发环境 </p><p>下面只介绍几个常见的字段，<a href="http://javascript.ruanyifeng.com/nodejs/packagejson.html" target="_blank" rel="noopener">更多字段请移步阮大神文章</a></p><h3 id="scripts字段"><a href="#scripts字段" class="headerlink" title="scripts字段"></a>scripts字段</h3><p>scripts指定了运行脚本命令的npm命令行缩写，比如start指定了运行npm run start时，所要执行的命令。</p><p>下面的设置指定了npm run preinstall、npm run postinstall、npm run start、npm run test时，所要执行的命令。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"preinstall"</span>: <span class="string">"echo here it comes!"</span>,</span><br><span class="line">    <span class="string">"postinstall"</span>: <span class="string">"echo there it goes!"</span>,</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"node index.js"</span>,</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"tap test/*.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dependencies字段，devDependencies字段"><a href="#dependencies字段，devDependencies字段" class="headerlink" title="dependencies字段，devDependencies字段"></a>dependencies字段，devDependencies字段</h3><p>dependencies字段指定了项目运行所依赖的模块，devDependencies指定项目开发所需要的模块。</p><p>它们都指向一个对象。该对象的各个成员，分别由模块名和对应的版本要求组成，表示依赖的模块及其版本范围。  </p><p>对应的版本可以加上各种限定，主要有以下几种：  </p><blockquote><p>指定版本：比如1.2.2，遵循“大版本.次要版本.小版本”的格式规定，安装时只安装指定版本。<br>波浪号（tilde）+指定版本：比如~1.2.2，表示安装1.2.x的最新版本（不低于1.2.2），但是不安装1.3.x，也就是说安装时不改变大版本号和次要版本号。<br>插入号（caret）+指定版本：比如ˆ1.2.2，表示安装1.x.x的最新版本（不低于1.2.2），但是不安装2.x.x，也就是说安装时不改变大版本号。需要注意的是，如果大版本号为0，则插入号的行为与波浪号相同，这是因为此时处于开发阶段，即使是次要版本号变动，也可能带来程序的不兼容。<br>latest：安装最新版本。 </p></blockquote><p>有了package.json文件，直接使用npm install命令，就会在当前目录中安装所需要的模块。</p><p>如果一个模块不在package.json文件之中，可以单独安装这个模块，并使用相应的参数，将其写入package.json文件之中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install express --save-dev</span><br></pre></td></tr></table></figure><h3 id="config-字段"><a href="#config-字段" class="headerlink" title="config 字段"></a>config 字段</h3><p>config字段用于添加命令行的环境变量。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个项目的根目录下面，一般都有一个package.json文件，定义了这个项目所需要的各种模块&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>面经</title>
    <link href="http://yoursite.com/2018/03/14/%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2018/03/14/面经/</id>
    <published>2018-03-14T06:51:44.938Z</published>
    <updated>2017-10-15T03:44:54.404Z</updated>
    
    <content type="html"><![CDATA[<p>面试总结<br><a id="more"></a><br>先来看一篇文章吧  <a href="http://taobaofed.org/blog/2017/03/03/to-my-future-friend/" target="_blank" rel="noopener">致未来的实习生</a></p><h3 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h3><p>你好，我叫xxx，就读XX专业，很高兴能得到这次面试的机会。我非常喜欢前端的各种新技术，对前端的现状也有一个比较宏观的了解。目前，我比较擅长使用 XX、XXX。如果公司因业务需求，我愿意去学习相应的前端技术！</p><p>在生活上，我待人真诚</p><pre><code>* 有点难度的开发经历值得一说* 面试：分析问题，再解决问题* 把面试官往你熟悉的领域引导</code></pre><h3 id="面试结束"><a href="#面试结束" class="headerlink" title="面试结束"></a>面试结束</h3><ul><li><p>问技术方面面试官的问题</p><ul><li>结合刚刚的面试，可以给我几点<strong>技术方面的建议</strong>吗</li><li>了解一下公司的前端大致在做<strong>哪些业务</strong></li><li>了解一下公司前端团队的<strong>技术栈</strong>有哪些</li><li><strong>后端</strong>主要用什么语言？</li><li>聊的不错的话，可以要一下联系方式</li></ul></li><li><p>问 HR 的问题</p><ul><li>薪水（税前税后月薪多少？一年十三薪？）</li><li>是否有补贴？（餐补？电脑补？）</li><li>上下班时间</li></ul></li></ul><blockquote><p>忌问面试结果</p></blockquote><h3 id="HR-面"><a href="#HR-面" class="headerlink" title="HR 面"></a>HR 面</h3><p>在公司选择上，我比较看重真正重视和尊重员工的公司。人性化</p><ul><li><p><strong>你有什么缺点？</strong></p><ul><li>大型项目经验不足</li></ul></li><li><p><strong>你有什么优点？</strong></p><ul><li>抗压能力强</li></ul></li><li><p><strong>你对薪水有什么要求？</strong></p><ul><li>我希望公司能结合我的专业能力和人才市场标准的水平，给我合理的薪水即可</li></ul></li><li><p><strong>你对加班有什么看法</strong></p><ul><li>如果工作需要，加班是没问题的，反正我现在单身，没啥家庭负担。但是我会在日常工作中尽量提高自己的工作效率，减少不必要的加班。</li></ul></li></ul><p><a href="https://www.zhihu.com/question/19603341" target="_blank" rel="noopener">面试的时候 -&gt;_-&gt;</a></p><h3 id="回答问题的方式"><a href="#回答问题的方式" class="headerlink" title="回答问题的方式"></a>回答问题的方式</h3><ul><li><p><strong>要是直接的问题答不出来的话，可以答一些相关的话题</strong></p><pre><code>问：你知道http的302是什么吗答：不好意思，这个我忘记了，不过我知道 200 表示请求成功，    404表示资源没有被找到，4xx代表客户端请求报文错误，5xx代表服务端错误</code></pre></li></ul><ul><li><strong>分点回答</strong></li><li><strong>不要冷场，结果并不那么重要，思考过程最重要</strong></li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><pre><code>2xx：成功3xx：重定向4xx：客户端错误5xx：服务端错误</code></pre><p>200 OK：成功</p><p>301 Moved Permanently：永久性重定向（请求的资源被分配了新的URL）</p><p>302 Found：临时性重定向（请求的资源临时被分配了新的URL）</p><p>304 Not Modified：在这种情况下，由于客户端仍然具有以前下载的资源的副本，因此不需要重新传输资源。</p><p>400 Bad Request：请求报文中存在语法错误</p><p>403 Forbidden：请求被服务器拒绝</p><h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><ul><li><p><strong>减少 HTTP 请求次数</strong>：浏览器进程一次发送请求的数目是有限的（4、6 不等），如果有很多 HTTP 请求，就会造成请求阻塞，影响体验。</p><ul><li>将小图片转 base64 字符串嵌在页面中</li><li>合并图片（css 精灵 == CSS Sprites）</li><li>合并 CSS 和 JS 文件</li><li>采用 lazyLoad（懒加载）</li></ul></li><li><p><strong>控制资源文件加载优先级</strong>（css 放头部、js 放尾部）</p></li><li><strong>使用浏览器缓存</strong></li><li><strong>使用 cdn</strong></li><li><strong>减少重排</strong></li><li><strong>压缩 js、css、图片</strong></li><li><strong>DNS优化（即域名收敛）</strong>：将静态资源放在一个域名下面，而不要分开放在多个域名下面</li><li><strong>资源预加载：</strong> 我们可以使用该技术来预先告知浏览器某些资源可能在将来会被使用到（DNS预解析、资源预获取、预连接、预渲染）</li></ul><ul><li><p>CSS 解析选择器是从右向左的，所以应该尽量避免多层嵌套的选择器</p></li><li><p>http2: 一个二进制协议，头部压缩、多路复用、服务器推送</p></li></ul><blockquote><p><a href="https://github.com/chokcoco/cnblogsArticle/issues/1" target="_blank" rel="noopener">【前端性能】浅谈域名发散与域名收敛</a></p><p><a href="https://segmentfault.com/a/1190000006922364" target="_blank" rel="noopener">浅谈网站性能之前端性能优化</a></p><p><a href="http://bubkoo.com/2015/11/19/prefetching-preloading-prebrowsing/" target="_blank" rel="noopener">前端性能优化 - 资源预加载</a></p></blockquote><h3 id="js-坑"><a href="#js-坑" class="headerlink" title="js 坑"></a>js 坑</h3><p><strong>利用循环一次注册多个 setTimeout(()=&gt;{},1000) 后，会在一秒后同时执行这几个计时器，不是一秒执行一个</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="从浏览器输入-URL-到页面渲染发生了什么事"><a href="#从浏览器输入-URL-到页面渲染发生了什么事" class="headerlink" title="从浏览器输入 URL 到页面渲染发生了什么事"></a>从浏览器输入 URL 到页面渲染发生了什么事</h3><pre><code>浏览器先检查请求的内容是否在浏览器缓存中，如果在，则直接解析内容DNS 解析 URL浏览器与服务器建立 TCP 连接客户端发送 HTTP 请求服务器处理请求，返回 HTTP 响应关闭 TCP 连接浏览器解析html生成 DOM tree，解析css生成 CSS Rule TreeDOM 树和 CSS 规则树一起构造出 render 树将 render 树显示在页面上同时异步加载网页中 CSS、JavaScript 等外部资源</code></pre><h3 id="浏览器的渲染过程"><a href="#浏览器的渲染过程" class="headerlink" title="浏览器的渲染过程"></a>浏览器的渲染过程</h3><ul><li>重绘</li><li>重排</li></ul><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><ul><li><strong>async 与 defer</strong></li></ul><p><a href="http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html" target="_blank" rel="noopener">http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html</a></p><p>一般情况：解析 html –&gt; 遇到js，暂停解析html –&gt; 下载js –&gt; 执行js –&gt; 继续解析html</p><p>async：解析html –&gt; 遇到js，异步下载js，但不会暂停解析html –&gt; js下载完毕后，暂停解析html，执行js –&gt; js执行完后，继续解析html</p><p>defer：解析html –&gt; 遇到js，异步下载js，但不会暂停解析html –&gt; html解析完毕后，开始执行js</p><ul><li><strong>this 就是你 call 一个函数时，传入的 context</strong></li></ul><p><a href="https://zhuanlan.zhihu.com/p/23804247" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23804247</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">func(<span class="number">12</span>)      <span class="comment">// =&gt; func.call(undefined, 12)</span></span><br><span class="line"></span><br><span class="line">obj.func(<span class="number">12</span>)  <span class="comment">// =&gt; func.call(obj, 12)</span></span><br><span class="line"></span><br><span class="line">func.call(context, arg1, arg2, ...)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [fn, fn]</span><br><span class="line">arr[<span class="number">0</span>]()  <span class="comment">// this ==&gt; arr</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>什么是闭包： 函数 + 函数所在的环境</strong> </p><ul><li>封装私有变量和私有方法</li></ul></li><li><p><strong>手动实现 bind 函数</strong> 对于实现的过程有什么具体点的要求吗</p><ul><li><strong>直接调用 bind 函数并不会直接执行函数</strong></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myBind</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.apply(context, args)</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>RESTFUL API</strong>：增查删改</p><pre><code>GET    用来获取资源POST   用来新建资源（也可以用于更新资源）PUT    用来更新资源DELETE  用来删除资源</code></pre></li><li><p><strong>事件模型：</strong> 事件捕获、事件冒泡、事件委托</p></li><li><p><strong>new 操作符</strong></p><pre><code>1. 创建一个新的空对象 obj2. 将空对象 obj  的 __proto__ 属性设置为构造函数的 prototype 属性3. 将构造函数内部的 this 设置为 obj</code></pre></li><li><p><strong>创建自定义类型目前最好的方式</strong>：组合使用构造函数模式和原型模式</p><ul><li>属性定义在构造函数中，共享的属性和方法定义在原型上</li></ul></li><li><p><strong>继承的实现</strong></p><ul><li>组合继承</li><li>原型式继承</li><li>寄生式继承</li><li>寄生组合式继承（最棒）</li></ul></li></ul><h3 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h3><ul><li><p>sessionStorage：只存在于当前页面上</p></li><li><p><strong>跨域</strong></p><ul><li>postMessage()</li><li><strong>jsonp :</strong> 本质上是请求回一段js代码，然后在本地执行</li><li><strong>CORS</strong></li></ul></li><li><p>web worker</p></li><li>服务器发送事件（SSE)</li><li>File API</li><li>Drag and Drop</li><li>indexedDB</li></ul><h3 id="vue-相关"><a href="#vue-相关" class="headerlink" title="vue 相关"></a>vue 相关</h3><ul><li><p><strong>数据双向绑定</strong></p><ul><li>最核心的方法便是通过 <code>Object.defineProperty()</code> 来实现对属性的劫持，达到监听数据变动的目的（ES6 可以使用）</li></ul></li><li><p><strong>组件化开发</strong></p><ul><li>单文件组件</li></ul></li><li><strong>虚拟 DOM</strong><ul><li>如果用 js 直接操作 DOM，会造成页面的重排，性能很差</li><li>用 js 对象模拟 DOM 树创建出最初的虚拟 DOM，数据发生变化时，生成新的虚拟DOM，与原来的虚拟dom进行比较并将变化应用到最初的虚拟 DOM上，最后再应用到真正的 DOM 上</li></ul></li><li><strong>社区环境好，上手简单</strong></li><li><strong>数据驱动，能让你将关注度集中在数据上，而不是繁琐的 DOM 操作上</strong></li></ul><h3 id="web-安全相关"><a href="#web-安全相关" class="headerlink" title="web 安全相关"></a>web 安全相关</h3><ul><li><p><strong>SQL 注入</strong></p></li><li><p><strong>XSS：</strong> 跨站脚本（Cross-site scripting）</p><ul><li>利用网站开发时留下的漏洞，将恶意脚本注入，在用户访问该网页时执行恶意脚本，从而达到某种恶意的目的（比如向一个有漏洞的评论框里注入 js 代码）</li><li>获取用户敏感信息</li><li>过滤用户字符串，对敏感字符进行转义</li></ul></li><li><p><strong>CSRF（或 XSRF）：</strong> 跨站请求伪造（Cross-site request forgery）</p><ul><li>以用户的名义发起请求，从而达到某种恶意的目的（盗号、发消息、发邮件、转账）</li><li>跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</li><li>加验证码。</li></ul></li></ul><blockquote><p><a href="https://blog.tonyseek.com/post/introduce-to-xss-and-csrf/" target="_blank" rel="noopener">总结 XSS 与 CSRF 两种跨站攻击</a></p><p><a href="https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0" target="_blank" rel="noopener">跨站请求伪造</a></p></blockquote><p>永远不要信任从客户端发来的数据。</p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>vue-book 中正好把3月份找实习时候看的知识点都用上了，比如 cookie、localstorage、jsonp 等</p><h3 id="http的缓存机制"><a href="#http的缓存机制" class="headerlink" title="http的缓存机制"></a>http的缓存机制</h3><ul><li><p>Cache-Control（通过它提供的不同的值来定义缓存策略）</p></li><li><p>Etag（标识符，用作校验，资源发生变化时，他的值也会变化）</p></li></ul><blockquote><p><a href="http://www.cnblogs.com/vajoy/p/5341664.html" target="_blank" rel="noopener">浅谈浏览器http的缓存机制</a></p><p><a href="http://jixianqianduan.com/frontend-javascript/2015/12/28/nine-browser-cache-methods.html" target="_blank" rel="noopener">九种浏览器端缓存机制知多少</a></p></blockquote><h3 id="算法，数据结构"><a href="#算法，数据结构" class="headerlink" title="算法，数据结构"></a>算法，数据结构</h3><p>冒泡排序</p><p>快速排序</p><ul><li><strong>二叉树：</strong> 先序遍历、中序遍历、后序遍历</li></ul><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><ul><li><strong>Buffer模块是干什么的：</strong> nodejs 用来处理二进制数据的模块，对比与 ES6 的 TypedArray</li><li><strong>Stream是什么，使用的两种模式：</strong> stream 是一种用来表示数据流的抽象概念（文件流、）</li></ul><blockquote><p><a href="http://zhenhua-lee.github.io/nodejs/stream.html" target="_blank" rel="noopener">nodejs stream</a></p></blockquote><h3 id="js-的薄弱点"><a href="#js-的薄弱点" class="headerlink" title="js 的薄弱点"></a>js 的薄弱点</h3><p>模拟事件</p><p>前端安全相关</p><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><ul><li>给出一个实际的需求，看应聘者怎么解决</li><li>让应聘者画一个他所在领域的知识概括<ul><li>比如： CSS 有定位、BFC、文本格式等  </li></ul></li></ul><p>本文是好友<a href="http://blog.percymong.com" target="_blank" rel="noopener">percymong</a>提供的资源，非常感谢他的指导。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面试总结&lt;br&gt;
    
    </summary>
    
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>移动端事件介绍</title>
    <link href="http://yoursite.com/2018/03/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%BA%8B%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2018/03/14/移动端事件介绍/</id>
    <published>2018-03-14T06:51:44.937Z</published>
    <updated>2017-09-23T03:30:40.624Z</updated>
    
    <content type="html"><![CDATA[<p>移动端常用事件介绍<br><a id="more"></a></p><h4 id="1-手势事件"><a href="#1-手势事件" class="headerlink" title="1.手势事件"></a>1.手势事件</h4><pre><code>touchstart：当手指放在屏幕上触发;touchmove：当手指在屏幕上滑动时，连续地触发;touchend：当手指从屏幕上离开时触发;touchcancel： 当系统停止跟踪时触发; 该事件暂时使用不到;</code></pre><h4 id="2-tap类事件"><a href="#2-tap类事件" class="headerlink" title="2.tap类事件"></a>2.tap类事件</h4><pre><code>触碰事件，一般用于代替click事件，tap: 手指碰一下屏幕会触发longTap: 手指长按屏幕会触发singleTap: 手指碰一下屏幕会触发doubleTap: 手指双击屏幕会触发</code></pre><h4 id="3-swipe类事件"><a href="#3-swipe类事件" class="headerlink" title="3.swipe类事件"></a>3.swipe类事件</h4><pre><code>swipe：手指在屏幕上滑动时会触发swipeLeft：手指在屏幕上向左滑动时会触发swipeRight：手指在屏幕上向右滑动时会触发swipeUp：手指在屏幕上向上滑动时会触发swipeDown：手指在屏幕上向下滑动时会触发</code></pre><h4 id="事件处理程序的添加与删除"><a href="#事件处理程序的添加与删除" class="headerlink" title="事件处理程序的添加与删除"></a>事件处理程序的添加与删除</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> EventUtil = &#123;</span><br><span class="line">    addHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(element.addEventListener) &#123;</span><br><span class="line">            element.addEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(element.attachEvent) &#123;</span><br><span class="line">            element.attachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            element[<span class="string">"on"</span> +type] = handler;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    removeHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(element.removeEventListener) &#123;</span><br><span class="line">            element.removeEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(element.detachEvent) &#123;</span><br><span class="line">            element.detachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            element[<span class="string">"on"</span> +type] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>该函数接受三个参数</p><ul><li>element 执行该函数的对象</li><li>type 触发事件对象</li><li>handler 执行事件  <h6 id="例-："><a href="#例-：" class="headerlink" title="例 ："></a>例 ：</h6>在window中触摸时触发 打印出事件对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> touch = <span class="built_in">document</span>.getElementById(<span class="string">"touch"</span>);</span><br><span class="line">EventUtil.addHandler(touch,<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="touches"><a href="#touches" class="headerlink" title="touches:"></a>touches:</h4><p>表示当前跟踪的触摸操作的touch对象的数组。</p><p>当一个手指在触屏上时，event.touches.length = 1; 当二个手指在触屏上时，event.touches.length=2, 以此类推</p><h4 id="changedTouches"><a href="#changedTouches" class="headerlink" title="changedTouches:"></a>changedTouches:</h4><p>表示上次触摸以来发生了什么改变的touch对象的数组。</p><pre><code>每个touch对象都包含了以下几个属性：clientX 触摸目标在视口中的X坐标。clientY触摸目标在视口中的Y坐标。Identifier: 标示触摸的唯一ID。pageX 触摸目标在页面中的X坐标。pageY 触摸目标在页面中的Y坐标。screenX触摸目标在屏幕中的X坐标。screenY 触摸目标在屏幕中的Y坐标。target  触摸的DOM节点目标。</code></pre><h3 id="几个基本知识点"><a href="#几个基本知识点" class="headerlink" title="几个基本知识点"></a>几个基本知识点</h3><p>1.判断是否为iPhone<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  ：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAppleMobile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (navigator.platform.indexOf(‘iPad‘) != <span class="number">-1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>2.自动大写与自动修正</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要关闭这两项功能，可以通过autocapitalize 与autocorrect 这两个选项</span></span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">"text"</span> autocapitalize=<span class="string">"off"</span> autocorrect=<span class="string">"off"</span> /&gt;</span><br></pre></td></tr></table></figure><p>3.禁止 iOS 弹出各种操作窗口</p><p>-webkit-touch-callout:none</p><ol><li>禁止用户选中文字</li></ol><p>-webkit-user-select:none</p><ol><li>关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.value = <span class="keyword">this</span>.value.replace(<span class="regexp">/\u2006/g</span>, ‘‘);</span><br></pre></td></tr></table></figure><ol><li><p>Andriod 上去掉语音输入按钮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input::-webkit-input-speech-button &#123;<span class="attr">display</span>: none&#125;</span><br></pre></td></tr></table></figure></li><li><p>判断是否为微信浏览器；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_weixn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span>(ua.match(<span class="regexp">/MicroMessenger/i</span>)==<span class="string">"micromessenger"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;移动端常用事件介绍&lt;br&gt;
    
    </summary>
    
    
      <category term="移动端" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>移动端APP 自适应布局</title>
    <link href="http://yoursite.com/2018/03/14/%E7%A7%BB%E5%8A%A8%E7%AB%AFAPP%20%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/03/14/移动端APP 自适应布局/</id>
    <published>2018-03-14T06:51:44.936Z</published>
    <updated>2017-09-23T03:30:46.553Z</updated>
    
    <content type="html"><![CDATA[<p>初涉移动端 ，自适应布局的相关要点如下<br>本文摘自<br><a href="http://www.cocoachina.com/webapp/20151110/14148.html" target="_blank" rel="noopener">原文链接</a></p><h5 id="1-常规情况下js根据屏幕宽度动态计算"><a href="#1-常规情况下js根据屏幕宽度动态计算" class="headerlink" title="1.常规情况下js根据屏幕宽度动态计算"></a>1.常规情况下js根据屏幕宽度动态计算</h5><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0 ,user-scalable=no&quot;&gt;</span><br><span class="line">&lt;!--        视口                 宽度=设备的宽度       缩放比例为1           禁止用户缩放--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var deviceWidth = document.documentElement.clientWidth;</span><br><span class="line">document.documentElement.style.fontSize = deviceWidth / 7.5 + &apos;px&apos;;</span><br><span class="line">//设计稿基于iphone6，宽度为750px，body的width为750px / 100 = 7.5rem</span><br><span class="line">//http://520ued.com/tools/rem  PX转rem的网站</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br></pre></td></tr></table></figure><p>width=device-width<br>这段代码是让布局视口的尺寸等于理想视口。<br>设备像素比（DPR） = 设备像素个数 / 理想视口像素个数（device-width）</p><h5 id="2-媒体查询较密集的断点"><a href="#2-媒体查询较密集的断点" class="headerlink" title="2.媒体查询较密集的断点"></a>2.媒体查询较密集的断点</h5><pre><code>@media screen and (min-width: 320px) {    html {font-size: 14px;}}@media screen and (min-width: 360px) {    html {font-size: 16px;}}@media screen and (min-width: 400px) {    html {font-size: 18px;}}@media screen and (min-width: 440px) {    html {font-size: 20px;}}@media screen and (min-width: 480px) {    html {font-size: 22px;}}@media screen and (min-width: 640px) {    html {font-size: 28px;}}</code></pre><p>2009年，W3C 提出了一种新的方案—-Flex 布局，可以简便、完整、响应式地实现各种页面布局  </p><p><a href="http://www.cocoachina.com/webapp/20151110/14148.html" target="_blank" rel="noopener">flex布局教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初涉移动端 ，自适应布局的相关要点如下&lt;br&gt;本文摘自&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/webapp/20151110/14148.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;1-常规情况下js根据屏幕宽度动态计算&quot;&gt;&lt;a href=&quot;#1-常规情况下js根据屏幕宽度动态计算&quot; class=&quot;headerlink&quot; title=&quot;1.常规情况下js根据屏幕宽度动态计算&quot;&gt;&lt;/a&gt;1.常规情况下js根据屏幕宽度动态计算&lt;/h5&gt;
    
    </summary>
    
    
      <category term="移动端App" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AFApp/"/>
    
  </entry>
  
  <entry>
    <title>理解移动端click的300ms的延迟响应</title>
    <link href="http://yoursite.com/2018/03/14/%E7%90%86%E8%A7%A3%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E7%9A%84300ms%E7%9A%84%E5%BB%B6%E8%BF%9F%E5%93%8D%E5%BA%94/"/>
    <id>http://yoursite.com/2018/03/14/理解移动端click的300ms的延迟响应/</id>
    <published>2018-03-14T06:51:44.930Z</published>
    <updated>2017-09-23T03:30:47.783Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍移动端点击事件的300ms延迟及其解决方法<br><a id="more"></a></p><h4 id="“Bug”的由来"><a href="#“Bug”的由来" class="headerlink" title="“Bug”的由来"></a>“Bug”的由来</h4><p>Click事件在移动手机开发中有300ms的延　<br>因为在手机早期，浏览器系统有放大和缩放功能，用户在屏幕上点击两次之后，系统会触发放大或者缩放功能，因此系统做了一个处理，当触摸一次后，在300ms这段时间内有没有触摸第二次，如果触摸了第二次的话，说明是触发放大或缩放功能，否则的话是click事件。因此当click时候，所有用户必须等待于300ms后才会触发click事件。所以当在移动端使用click事件的时候，会感觉到有300ms的迟钝</p><h4 id="以下情况不用考虑延迟"><a href="#以下情况不用考虑延迟" class="headerlink" title="以下情况不用考虑延迟"></a>以下情况不用考虑延迟</h4><ol><li>桌面浏览器；</li><li><p>如果 viewport meta 标签 中设置了<br>width=device-width，Android 上的 Chrome 32+ 会禁用 300ms 延时；  </p></li><li><p>viewport meta 标签如果设置了 user-scalable=no，Android 上的 Chrome（所有版本）都会禁用 300ms 延迟</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>IE10 中，可以使用 css 属性 -ms-touch-action: none 禁止元素双击缩放</p></li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h5 id="方案1：禁止用户缩放。"><a href="#方案1：禁止用户缩放。" class="headerlink" title="方案1：禁止用户缩放。"></a>方案1：禁止用户缩放。</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="方案2：使用zepto-js的tap事件。"><a href="#方案2：使用zepto-js的tap事件。" class="headerlink" title="方案2：使用zepto.js的tap事件。"></a>方案2：使用zepto.js的tap事件。</h5><p>tap事件可以理解为在移动端的click事件，而zepto.js因为几乎完全复制jQuery的api，因此常常被用在h5的开发上用来取代jquery</p><h5 id="缺陷："><a href="#缺陷：" class="headerlink" title="缺陷："></a>缺陷：</h5><p>tap事件解决了一个300ms延迟问题，却带来了一个新的重大bug，点击穿透</p><p>点击穿透的意思，就是如果一个绝对定位或者固定定位元素处于页面最顶层，对这个元素绑定一个点击事件，那么你点击这个点对应的下面凡是有点击事件或者a标签都会被触发执行.</p><h5 id="方案3：fastclick-js"><a href="#方案3：fastclick-js" class="headerlink" title="方案3：fastclick.js"></a>方案3：fastclick.js</h5><p>首先想办法引入fastclick.js<br>下载fastclick.js<br><a href="http://www.bootcdn.cn/fastclick/" target="_blank" rel="noopener">点击获取</a>插件源码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">'application/javascript'</span> <span class="attr">src</span>=<span class="string">'/path/to/fastclick.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果你使用原生js开发则进行如下声明即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">'addEventListener'</span> <span class="keyword">in</span> <span class="built_in">document</span>) &#123;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        FastClick.attach(<span class="built_in">document</span>.body);</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果你想使用jquery<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    FastClick.attach(<span class="built_in">document</span>.body);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>部门内容转自<a href="https://segmentfault.com/a/1190000005791890" target="_blank" rel="noopener">移动端点击事件全攻略，这里的坑你知多少？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍移动端点击事件的300ms延迟及其解决方法&lt;br&gt;
    
    </summary>
    
    
      <category term="移动端" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
</feed>
